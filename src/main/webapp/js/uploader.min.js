(function() {
	var Y, N, O;
	function G(a) {
		var b = (new Date).getTime() + "-1772732-" + ++da;
		return a ? a + "-" + b : b
	}
	function H(a) {
		var b = {
			undefined : "undefined",
			number : "number",
			"boolean" : "boolean",
			string : "string",
			"[object Function]" : "function",
			"[object RegExp]" : "regexp",
			"[object Array]" : "array",
			"[object Date]" : "date",
			"[object Error]" : "error"
		};
		return b[typeof a] || b[Object.prototype.toString.call(a)]
				|| (a ? "object" : "null")
	}
	function P(a) {
		return "number" === typeof a && isFinite(a)
	}
	function Z(a, b) {
		var c = typeof a;
		return a
				&& ("object" === c || !b
						&& ("function" === c || "function" === H(a))) || !1
	}
	function Q(a, b, c, d) {
		var e, f, g;
		if (!a || !b)
			return a || {};
		if (d)
			for (e = 0, g = d.length; e < g; ++e)
				f = d[e], Object.prototype.hasOwnProperty.call(b, f)
						&& (c || !(f in a)) && (a[f] = b[f]);
		else {
			for (f in b)
				Object.prototype.hasOwnProperty.call(b, f) && (c || !(f in a))
						&& (a[f] = b[f]);
			({
				valueOf : 0
			}).propertyIsEnumerable("valueOf")
					|| Q(
							a,
							b,
							c,
							"hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toString,toLocaleString,valueOf"
									.split(","))
		}
		return a
	}
	function i(a, b) {
		var c = 2 < arguments.length ? $(arguments, 2) : null;
		return function() {
			var d = "string" === typeof a ? b[a] : a, e = c ? $(arguments, 0,
					!0).concat(c) : arguments;
			return d.apply(b || d, e)
		}
	}
	function $(a, b) {
		var c, d;
		b || (b = 0);
		try {
			return Array.prototype.slice.call(a, b)
		} catch (e) {
			d = [];
			for (c = a.length; b < c; ++b)
				d.push(a[b]);
			return d
		}
	}
	function C(a) {
		var b = document.createElement("div");
		b.innerHTML = a;
		a = b.childNodes;
		return a[0].parentNode.removeChild(a[0])
	}
	function t(a) {
		return a.toString().replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
	}
	function v(a) {
		return a.replace(/[^\x00-\xff]/g, "**").length
	}
	function R(a, b) {
		for (var c = a.split(""), d = 0, e = "", f = 0; f < c.length; f++) {
			d += /[^\x00-\xff]/g.test(c[f]) ? 2 : 1;
			if (d > b)
				break;
			e += c[f]
		}
		return e
	}
	function A(a) {
		return (a + "").replace(/[&<>"'\/`]/g, function(a) {
					return ea[a]
				})
	}
	function o(a, b, c, d) {
		for (var e, f, g, h, j, s = [], I, J = a.length;;) {
			e = a.lastIndexOf(S, J);
			if (0 > e)
				break;
			f = a.indexOf(T, e);
			if (e + 1 >= f)
				break;
			h = I = a.substring(e + 1, f);
			j = null;
			g = h.indexOf(fa);
			-1 < g && (j = h.substring(g + 1), h = h.substring(0, g));
			g = b[h];
			c && (g = c(h, g, j));
			"undefined" === typeof g && (g = "~-" + s.length + "-~", s.push(I));
			a = a.substring(0, e) + g + a.substring(f + 1);
			d || (J = e - 1)
		}
		return a.replace(ga, function(a, b, c) {
					return S + s[parseInt(c, 10)] + T
				}).replace(ha, S).replace(ia, T)
	}
	function x(a) {
		if (a)
			url = "http://hz.youku.com/red/click.php?tp=1&cp=" + a
					+ "&cpp=1000658&" + (new Date).getTime(), a = new Image(1,
					1), a.src = url, a.onload = function() {
			}
	}
	function K(a, b, c) {
		var d = [], e = "&", f = function(a, c) {
			var e = b ? /\[\]$/.test(b) ? b : b + "[" + c + "]" : c;
			"undefined" != e
					&& "undefined" != c
					&& d.push("object" === typeof a
							? K(a, e, !0)
							: "[object Function]" === Object.prototype.toString
									.call(a)
									? encodeURIComponent(e) + "="
											+ encodeURIComponent(a())
									: encodeURIComponent(e) + "="
											+ encodeURIComponent(a))
		};
		if (!c && b)
			e = /\?/.test(b) ? /\?$/.test(b) ? "" : "&" : "?", d.push(b), d
					.push(K(a));
		else if ("[object Array]" === Object.prototype.toString.call(a)
				&& "undefined" != typeof a)
			for (var g = 0, c = a.length; g < c; ++g)
				f(a[g], g);
		else if ("undefined" != typeof a && null !== a && "object" === typeof a)
			for (g in a)
				f(a[g], g);
		else
			d.push(encodeURIComponent(b) + "=" + encodeURIComponent(a));
		return d.join(e).replace(/^&/, "").replace(/%20/g, "+")
	}
	function n(a, b) {
		D(a, b) || (a.className += " " + b)
	}
	function D(a, b) {
		return RegExp("(^| )" + b + "( |$)").test(a.className)
	}
	function p(a, b) {
		a.className = a.className.replace(RegExp("(^| )" + b + "( |$)"), " ")
				.replace(/^\s+|\s+$/g, "")
	}
	function w(a, b) {
		if (!t(b) || !a)
			return [];
		if (a.querySelectorAll)
			return a.querySelectorAll("." + b);
		for (var c = [], d = a.getElementsByTagName("*"), e = d.length, f = 0; f < e; f++)
			D(d[f], b) && c.push(d[f]);
		return c
	}
	function k(a, b, c) {
		a.addEventListener ? a.addEventListener(b, c, !1) : a.attachEvent ? a
				.attachEvent("on" + b, c) : a["on" + b] = c
	}
	function U(a, b, c) {
		a.removeEventListener ? a.removeEventListener(b, c, !1) : a.detachEvent
				? a.detachEvent("on" + b, c)
				: a["on" + b] = null
	}
	function aa() {
		Q(this.constructor.prototype, {
					publish : function(a) {
						this._evts[a] || (this._evts[a] = null)
					},
					on : function(a, b, c) {
						var d = this._evts;
						d[a] = {};
						d[a].type = a;
						this.name && (d[a].type = this.name + ":" + a);
						d[a].fn = function() {
							b.apply(c, arguments)
						}
					},
					after : function(a, b, c) {
						this.on(a, b, c)
					},
					fire : function(a) {
						var b = this._evts[a];
						if (b) {
							var c = {
								target : this,
								type : b.type
							}, d = Array.prototype.slice.call(arguments, 1);
							if (Z(d[0]))
								for (var e in c)
									d[0][e]
											? d[0]["_" + e] = c[e]
											: d[0][e] = c[e];
							else
								d[0] = c;
							"function" === H(b.fn) && b.fn.apply(this, d)
						}
					},
					detach : function(a) {
						delete this._evts[a]
					}
				}, !1);
		this._evts = {}
	}
	function y(a) {
		aa.call(this);
		this._isApplySuperClass
				|| Q(this.constructor.prototype, y.prototype, !1);
		if (a)
			for (var b in a)
				this.set(b, a[b]);
		"function" === H(this.initializer)
				&& this.initializer.apply(this, arguments)
	}
	function l(a, b, c) {
		aa.call(this);
		var d = this._id = G("uploader-swf"), c = c || {}, e = ((c.version || ja) + "")
				.split("."), e = l.isFlashVersionAtLeast(parseInt(e[0], 10),
				parseInt(e[1], 10), parseInt(e[2], 10)), f = l
				.isFlashVersionAtLeast(8, 0, 0)
				&& !e && c.useExpressInstall, g = f ? ka : b, b = "<object ", h = "&SWFId="
				+ d
				+ "&callback="
				+ la
				+ "&allowedDomain="
				+ document.location.hostname;
		l._instances[d] = this;
		if (a && (e || f) && g) {
			b += 'id="' + d + '" ';
			b = r.ie ? b + ('classid="' + ma + '" ') : b
					+ ('type="' + na + '" data="' + A(g) + '" ');
			b += 'width="100%" height="100%">';
			r.ie && (b += '<param name="movie" value="' + A(g) + '"/>');
			for (var j in c.fixedAttributes)
				oa.hasOwnProperty(j)
						&& (b += '<param name="' + A(j) + '" value="'
								+ A(c.fixedAttributes[j]) + '"/>');
			for (var s in c.flashVars)
				j = c.flashVars[s], "string" === typeof j
						&& (h += "&" + A(s) + "=" + A(encodeURIComponent(j)));
			h && (b += '<param name="flashVars" value="' + h + '"/>');
			a.innerHTML = b + "</object>";
			this.swf = document.getElementById(d)
		} else
			this.publish("wrongflashversion", {
						fireOnce : !0
					}), this.fire("wrongflashversion", {
						type : "wrongflashversion"
					})
	}
	function V(a) {
		this.swfContainerId = G("uploader");
		this.queue = this.swfReference = null;
		this.buttonState = "up";
		this.config = {
			enabled : !0,
			multipleFiles : !0,
			appendNewFiles : !0,
			fileFilterFunction : null,
			buttonClassNames : {
				hover : "uploader-button-hover",
				active : "uploader-button-active",
				disabled : "uploader-button-disabled",
				focus : "uploader-button-selected"
			},
			containerClassNames : {
				hover : "uphotBg"
			},
			fileFilters : Y,
			fileFieldName : "FileData",
			simLimit : 1,
			retryCount : 3,
			postVarsPerFile : {},
			selectButtonLabel : "\u9009\u62e9\u6587\u4ef6",
			swfURL : "/v/swf/FlashUploader.swf",
			uploadURL : ""
		};
		y.apply(this, arguments)
	}
	function W(a) {
		this.buttonBinding = this.queue = this.fileInputField = null;
		this.config = {
			enabled : !0,
			multipleFiles : !0,
			appendNewFiles : !0,
			fileFilterFunction : null,
			dragAndDropArea : document,
			buttonClassNames : {
				hover : "uploader-button-hover",
				active : "uploader-button-active",
				disabled : "uploader-button-disabled",
				focus : "uploader-button-selected"
			},
			fileFilters : N,
			fileFieldName : "FileData",
			simLimit : 1,
			retryCount : 3,
			postVarsPerFile : {},
			selectButtonLabel : "\u9009\u62e9\u6587\u4ef6",
			uploadURL : ""
		};
		y.apply(this, arguments)
	}
	function E(a) {
		this.bytesSpeed = this.bytesPrevLoaded = 0;
		this.bytesSpeeds = [];
		this.preTime = this.remainTime = 0;
		this.config = {
			id : "",
			name : "",
			size : "",
			type : "",
			dateCreated : "",
			dateModified : "",
			uploader : ""
		};
		y.apply(this, arguments)
	}
	function z() {
		this.uploadInfo = {};
		this.config = {
			enabled : !0,
			multipleFiles : !!1,
			appendNewFiles : !1,
			fileFilterFunction : null,
			buttonClassNames : {
				hover : "uploader-button-hover",
				active : "uploader-button-active",
				disabled : "uploader-button-disabled",
				focus : "uploader-button-selected"
			},
			fileFieldName : "FileData",
			simLimit : 15,
			retryCount : 3,
			prefix : "upload-body-",
			postVarsPerFile : {},
			selectButtonLabel : "\u9009\u62e9\u6587\u4ef6",
			swfURL : "/v/swf/FlashUploader.swf",
			uploadURL : ""
		};
		y.apply(this, arguments)
	}
	function ba() {
		this.options = {
			Lay : null,
			Color : "#000",
			Opacity : 50,
			zIndex : 1900
		};
		this.Lay = document.body.insertBefore(document.createElement("div"),
				document.body.childNodes[0]);
		this.Color = this.options.Color;
		this.Opacity = parseInt(this.options.Opacity);
		this.zIndex = parseInt(this.options.zIndex);
		with (this.Lay.style)
			display = "none", zIndex = this.zIndex, left = top = 0, position = "fixed", width = height = "100%";
		if (6 == r.ie)
			this.Lay.style.position = "absolute", this._resize = i(function() {
						this.Lay.style.width = Math.max(
								document.documentElement.scrollWidth,
								document.documentElement.clientWidth)
								+ "px";
						this.Lay.style.height = Math.max(
								document.documentElement.scrollHeight,
								document.documentElement.clientHeight)
								+ "px"
					}, this), this.Lay.innerHTML = '<iframe style="position:absolute;top:0;left:0;width:100%;height:100%;filter:alpha(opacity=0);"></iframe>'
	}
	var da = 0, fa = " ", S = "{", T = "}", ga = /(~-(\d+)-~)/g, ha = /\{LBRACE\}/g, ia = /\{RBRACE\}/g, ea = {
		"&" : "&amp;",
		"<" : "&lt;",
		">" : "&gt;",
		'"' : "&quot;",
		"'" : "&#x27;",
		"/" : "&#x2F;",
		"`" : "&#x60;"
	}, pa = Array.isArray
			&& /\{\s*\[(?:native code|function)\]\s*\}/i.test(Array.isArray)
			? Array.isArray
			: function(a) {
				return "array" === H(a)
			};
	y.prototype = {
		_isApplySuperClass : !0,
		initializer : function() {
		},
		get : function(a) {
			return this.config[a]
		},
		set : function(a, b) {
			var c;
			a
					&& "undefined" !== typeof b
					&& a in this.config
					&& (this.config[a] = b, c = a + "Change", this._evt
							&& c in this._evt.events && this.fire(c))
		}
	};
	var r = function(a) {
		var b = function(a) {
			var b = 0;
			return parseFloat(a.replace(/\./g, function() {
						return 1 == b++ ? "" : "."
					}))
		}, c = window, d = c && c.navigator, e = {
			ie : 0,
			opera : 0,
			gecko : 0,
			webkit : 0,
			safari : 0,
			chrome : 0,
			mobile : null,
			air : 0,
			phantomjs : 0,
			air : 0,
			ipad : 0,
			iphone : 0,
			ipod : 0,
			ios : null,
			android : 0,
			silk : 0,
			accel : !1,
			webos : 0,
			caja : d && d.cajaVersion,
			secure : !1,
			os : null,
			nodejs : 0
		}, a = a || d && d.userAgent, d = (c = c && c.location) && c.href, c = 0, f, g, h;
		e.userAgent = a;
		e.secure = d && 0 === d.toLowerCase().indexOf("https");
		if (a) {
			if (/windows|win32/i.test(a))
				e.os = "windows";
			else if (/macintosh|mac_powerpc/i.test(a))
				e.os = "macintosh";
			else if (/android/i.test(a))
				e.os = "android";
			else if (/symbos/i.test(a))
				e.os = "symbos";
			else if (/linux/i.test(a))
				e.os = "linux";
			else if (/rhino/i.test(a))
				e.os = "rhino";
			if (/KHTML/.test(a))
				e.webkit = 1;
			if (/IEMobile|XBLWP7/.test(a))
				e.mobile = "windows";
			if (/Fennec/.test(a))
				e.mobile = "gecko";
			if ((d = a.match(/AppleWebKit\/([^\s]*)/)) && d[1]) {
				e.webkit = b(d[1]);
				e.safari = e.webkit;
				if (/PhantomJS/.test(a) && (d = a.match(/PhantomJS\/([^\s]*)/))
						&& d[1])
					e.phantomjs = b(d[1]);
				if (/ Mobile\//.test(a) || /iPad|iPod|iPhone/.test(a)) {
					if (e.mobile = "Apple", (d = a.match(/OS ([^\s]*)/))
							&& d[1] && (d = b(d[1].replace("_", "."))), e.ios = d, e.os = "ios", e.ipad = e.ipod = e.iphone = 0, (d = a
							.match(/iPad|iPod|iPhone/))
							&& d[0])
						e[d[0].toLowerCase()] = e.ios
				} else {
					if (d = a.match(/NokiaN[^\/]*|webOS\/\d\.\d/))
						e.mobile = d[0];
					if (/webOS/.test(a)
							&& (e.mobile = "WebOS", (d = a
									.match(/webOS\/([^\s]*);/))
									&& d[1]))
						e.webos = b(d[1]);
					if (/ Android/.test(a)) {
						if (/Mobile/.test(a))
							e.mobile = "Android";
						if ((d = a.match(/Android ([^\s]*);/)) && d[1])
							e.android = b(d[1])
					}
					if (/Silk/.test(a)) {
						if ((d = a.match(/Silk\/([^\s]*)\)/)) && d[1])
							e.silk = b(d[1]);
						if (!e.android)
							e.android = 2.34, e.os = "Android";
						if (/Accelerated=true/.test(a))
							e.accel = !0
					}
				}
				if ((d = a.match(/(Chrome|CrMo|CriOS)\/([^\s]*)/)) && d[1]
						&& d[2]) {
					if (e.chrome = b(d[2]), e.safari = 0, "CrMo" === d[1])
						e.mobile = "chrome"
				} else if (d = a.match(/AdobeAIR\/([^\s]*)/))
					e.air = d[0]
			}
			if (!e.webkit)
				if (/Opera/.test(a)) {
					if ((d = a.match(/Opera[\s\/]([^\s]*)/)) && d[1])
						e.opera = b(d[1]);
					if ((d = a.match(/Version\/([^\s]*)/)) && d[1])
						e.opera = b(d[1]);
					if (/Opera Mobi/.test(a)
							&& (e.mobile = "opera", (d = a.replace(
									"Opera Mobi", "").match(/Opera ([^\s]*)/))
									&& d[1]))
						e.opera = b(d[1]);
					if (d = a.match(/Opera Mini[^;]*/))
						e.mobile = d[0]
				} else if ((d = a.match(/MSIE\s([^;]*)/)) && d[1])
					e.ie = b(d[1]);
				else if (d = a.match(/Gecko\/([^\s]*)/))
					if (e.gecko = 1, (d = a.match(/rv:([^\s\)]*)/)) && d[1])
						e.gecko = b(d[1])
		}
		if (e.gecko || e.webkit || e.opera) {
			if (b = navigator.mimeTypes["application/x-shockwave-flash"])
				if (b = b.enabledPlugin)
					f = b.description.replace(/\s[rd]/g, ".").replace(
							/[A-Za-z\s]+/g, "").split(".")
		} else if (e.ie) {
			try {
				g = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6"), g.AllowScriptAccess = "always"
			} catch (j) {
				null !== g && (c = 6)
			}
			if (0 === c)
				try {
					h = new ActiveXObject("ShockwaveFlash.ShockwaveFlash"), f = h
							.GetVariable("$version")
							.replace(/[A-Za-z\s]+/g, "").split(",")
				} catch (s) {
				}
		}
		if (pa(f)) {
			if (P(parseInt(f[0], 10)))
				e.flashMajor = f[0];
			if (P(parseInt(f[1], 10)))
				e.flashMinor = f[1];
			if (P(parseInt(f[2], 10)))
				e.flashRev = f[2]
		}
		return e
	}(), ma = "clsid:d27cdb6e-ae6d-11cf-96b8-444553540000", na = "application/x-shockwave-flash", ja = "10.0.22", ka = "http://fpdownload.macromedia.com/pub/flashplayer/update/current/swf/autoUpdater.swf?"
			+ Math.random(), la = "SWF.eventHandler", oa = {
		align : "",
		allowFullScreen : "",
		allowNetworking : "",
		allowScriptAccess : "",
		base : "",
		bgcolor : "",
		loop : "",
		menu : "",
		name : "",
		play : "",
		quality : "",
		salign : "",
		scale : "",
		tabindex : "",
		wmode : ""
	};
	l.getFlashVersion = function() {
		return "" + r.flashMajor + "." + ("" + r.flashMinor) + "."
				+ ("" + r.flashRev)
	};
	l.isFlashVersionAtLeast = function(a, b, c) {
		var d = parseInt(r.flashMajor, 10), e = parseInt(r.flashMinor, 10), f = parseInt(
				r.flashRev, 10), a = parseInt(a || 0, 10), b = parseInt(b || 0,
				10), c = parseInt(c || 0, 10);
		return a === d ? b === e ? c <= f : b < e : a < d
	};
	l._instances = l._instances || {};
	l.eventHandler = function(a, b) {
		l._instances[a]._eventHandler(b)
	};
	l.prototype = {
		initializer : function() {
		},
		_eventHandler : function(a) {
			"swfReady" === a.type ? (this.publish("swfReady", {
						fireOnce : !0
					}), this.fire("swfReady", a)) : "log" !== a.type
					&& this.fire(a.type, a)
		},
		callSWF : function(a, b) {
			b || (b = []);
			return this.swf[a] ? this.swf[a].apply(this.swf, b) : null
		},
		toString : function() {
			return "SWF " + this._id
		}
	};
	l.prototype.constructor = l;
	(function() {
		var a = function(a, b) {
			for (var c in b)
				a[c] = b[c]
		}, b = function(a, b) {
			return function() {
				return b.apply(a, arguments)
			}
		}, c = function(a, b, c) {
			a.addEventListener ? a.addEventListener(b, c, !1) : a.attachEvent
					? a.attachEvent("on" + b, c)
					: a["on" + b] = c
		}, d = function() {
			var a = document.createElement("div");
			return function(b) {
				a.innerHTML = b;
				b = a.firstChild;
				a.removeChild(b);
				return b
			}
		}(), e = function(a, b) {
			if (a.querySelectorAll)
				return a.querySelectorAll("." + b);
			for (var c = [], d = a.getElementsByTagName("*"), e = d.length, f = 0; f < e; f++)
				RegExp("(^| )" + b + "( |$)").test(d[f].className)
						&& c.push(d[f]);
			return c
		}, f = function() {
			var a = 9999;
			return function() {
				return a++
			}
		}(), g = function(d) {
			this._options = {
				button : null,
				action : "/QUpload/~ajax/listFolder",
				params : {
					ps : 10,
					pl : 1
				},
				albumData : null,
				onSubmit : function() {
				},
				onCancel : function() {
				},
				onClose : function() {
				},
				onShow : function() {
				}
			};
			a(this._options, d);
			this.data = {
				pageNumber : 1,
				totalPage : 1,
				albumData : []
			};
			this.panel = null;
			if (this._options.albumData)
				this.data.albumData = this._options.albumData;
			this.button = this._options.button;
			this.init();
			this.button && c(this.button, "click", b(this, function() {
								this.show()
							}))
		};
		a(g.prototype, {
			init : function() {
				var a = this.getTemplate();
				this.panel = d(a);
				this.pager = e(this.panel, "pages")[0];
				this.qPager = e(this.panel, "qPager")[0];
				this.listAll = e(this.panel, "list-all")[0];
				this.listSelected = e(this.panel, "list-selected")[0];
				this.submitBtn = e(this.panel, "submit-btn")[0];
				this.cancelBtn = e(this.panel, "cancel-btn")[0];
				this.closeBtn = e(this.panel, "close")[0];
				this.selectAllBtn = e(this.panel, "all-btn")[0];
				this.selectedBtn = e(this.panel, "selected-btn")[0];
				this.preBtn = e(this.panel, "pre")[0];
				this.nextBtn = e(this.panel, "next")[0];
				this.layer = new s;
				this.panel.style.zIndex = this.layer.zIndex + 1;
				this.panel.style.display = "none";
				document.body.appendChild(this.panel);
				this.bindStaticEvent()
			},
			show : function(a) {
				this
						.getData(a ? a : this._options.params, b(this,
										this.render))
			},
			render : function(a) {
				var d = parseInt(a.pageNo) || 1, e = parseInt(a.totalPage) || 0, a = a.items
						|| [];
				this.data.pageNumber = d;
				this.data.totalPage = e;
				this.renderPager(d, e);
				this.renderAlbumList(a);
				this.preBtn.innerHTML = 1 == d
						? '<span><em class="ico_pre"></em>\u4e0a\u4e00\u9875</span>'
						: '<a href="#" class="pre-btn"><em class="ico_pre"></em>\u4e0a\u4e00\u9875</a>';
				this.nextBtn.innerHTML = 0 != e && d != e
						? '<a href="#" class="next-btn"><em class="ico_next"></em>\u4e0b\u4e00\u9875</a>'
						: '<span><em class="ico_next"></em>\u4e0b\u4e00\u9875</span>';
				this.bindDynamicEvent();
				if (j)
					this.panel.style.marginTop = document.documentElement.scrollTop
							- 280 + "px", this.panel.style.marginLeft = document.documentElement.scrollLeft
							- 325 + "px", c(window, "scroll", b(this,
							function() {
								this.panel.style.marginTop = document.documentElement.scrollTop
										- this.panel.offsetHeight / 2 + "px";
								this.panel.style.marginLeft = document.documentElement.scrollLeft
										- this.panel.offsetWidth / 2 + "px"
							}));
				if ("block" != this.panel.style.display)
					this.layer.show(), this.panel.style.display = "block"
			},
			bindStaticEvent : function() {
				c(this.selectAllBtn, "click", b(this, function(a) {
					if ("current" != (a.target || a.srcElement).className) {
						for (var a = e(this.listAll, "album-ck"), b = 0; b < a.length; b++)
							a[b].checked = !1;
						this.selectedBtn.className = "";
						this.listSelected.style.display = "none";
						this.selectAllBtn.className = "current";
						this.listAll.style.display = "block";
						this.qPager.style.display = "block"
					}
				}));
				c(this.selectedBtn, "click", b(this, function(a) {
					if ("current" != (a.target || a.srcElement).className)
						this.selectAllBtn.className = "", this.listAll.style.display = "none", this.qPager.style.display = "none", this
								.renderSelectedPanel(), this.selectedBtn.className = "current", this.listSelected.style.display = "block"
				}));
				c(this.submitBtn, "click", b(this, this.onSubmit));
				c(this.cancelBtn, "click", b(this, this.onCancel));
				c(this.closeBtn, "click", b(this, this.close))
			},
			bindDynamicEvent : function() {
				for (var a = e(this.listAll, "album-ck"), d = 0; d < a.length; d++)
					c(a[d], "click", b(this, function(a) {
						var b = a.target || a.srcElement, a = {}, c = !1;
						if (b.checked)
							if (a.folderId = b.value, a.folderName = b.title, 10 > this.data.albumData.length) {
								for (b = 0; b < this.data.albumData.length; b++)
									if (this.data.albumData[b].folderId == a.folderId) {
										c = !0;
										break
									}
								c || this.data.albumData.push(a)
							} else
								b.checked = !1, alert("\u6700\u591a\u53ef\u900910\u4e2a\u4e13\u8f91")
					}));
				a = this.pager.getElementsByTagName("a");
				for (d = 0; d < a.length; d++)
					c(a[d], "click", b(this, function(a) {
										var b = (a.target || a.srcElement).id;
										a.preventDefault
												? a.preventDefault()
												: a.returnValue = !1;
										this.show({
													ps : 10,
													pl : b
												})
									}));
				(a = e(this.qPager, "pre-btn")[0])
						&& c(a, "click", b(this, function() {
											var a = this.data.pageNumber - 1;
											0 < a && this.show({
														ps : 10,
														pl : a
													})
										}));
				(a = e(this.qPager, "next-btn")[0])
						&& c(a, "click", b(this, function() {
											var a = this.data.pageNumber + 1;
											0 < a && this.show({
														ps : 10,
														pl : a
													})
										}))
			},
			renderSelectedPanel : function() {
				var a = this.data.albumData, d = "<ul>";
				if (0 < a.length)
					for (var f = 0; f < a.length; f++)
						d += '<li class="'
								+ (1 === f % 2 ? "even" : "odd")
								+ '"><div><input type="checkbox" checked="true" class="album-ck" value="', d += a[f].folderId
								+ '" title="'
								+ a[f].folderName
								+ '"></div><span>', d += a[f].folderName
								+ "</span></li>";
				this.listSelected.innerHTML = d + "</ul>";
				a = e(this.listSelected, "album-ck");
				for (f = 0; f < a.length; f++)
					c(a[f], "click", b(this, function(a) {
						var a = a.target || a.srcElement, b = a.parentNode;
						if (a && !a.checked) {
							for (var c = 0; c < this.data.albumData.length; c++)
								this.data.albumData[c].folderId == a.value
										&& this.data.albumData.splice(c, 1);
							for (; b;) {
								if ("li" === b.tagName.toLowerCase()) {
									b.parentNode.removeChild(b);
									break
								}
								b = b.parentNode
							}
						}
					}))
			},
			renderPager : function(a, b) {
				function c(a, b) {
					var d = "";
					a <= b
							&& (d = '<li><a href="javascript:void(0)" id="' + a
									+ '">' + a + "</a></li>");
					return d
				}
				var d = "";
				if (10 > b)
					for (var e = 1; e < b + 1; e++)
						d = a == e
								? d
										+ ('<li class="current"><span>' + e + "</span></li>")
								: d
										+ ('<li><a href="javascript:void(0)" id="'
												+ e + '">' + e + "</a></li>");
				else if (5 < a)
					d = d
							+ '<li><a href="javascript:void(0)" id="1">1</a></li><li class="pass">...</li>'
							+ c(a - 2, b), d += c(a - 1, b), d = d
							+ ('<li class="current"><span>' + a + "</span></li>")
							+ c(a + 1, b), d += c(a + 2, b), b > a + 2
							&& (b > a + 3 && (d += '<li class="pass">...</li>'), d += '<li><a href="javascript:void(0)" id="'
									+ b + '">' + b + "</a></li>");
				else {
					for (e = 1; 10 > e; e++)
						d = a == e
								? d
										+ ('<li class="current"><span>' + e + "</span></li>")
								: d
										+ ('<li><a href="javascript:void(0)" id="'
												+ e + '">' + e + "</a></li>");
					d += '<li class="pass">...</li><li"><a href="javascript:void(0)" id="'
							+ b + '">' + b + "</a></li>"
				}
				this.pager.innerHTML = d
			},
			renderAlbumList : function(a) {
				var b = "<ul>";
				if (a && 0 < a.length)
					for (var c = 0; c < a.length; c++)
						b += '<li class="'
								+ (1 === c % 2 ? "even" : "odd")
								+ '"><div><input type="checkbox" class="album-ck" value="', b += a[c].folderId
								+ '" title="'
								+ a[c].folderName
								+ '"></div><span>', b += a[c].folderName
								+ "</span></li>";
				this.listAll.innerHTML = b + "</ul>"
			},
			getTemplate : function() {
				var a;
				return '<div class="popwin" ><div class="listEditBox"><div class="tab"><div class="menus"><ul><li class="current all-btn">\u5168\u90e8</li><li class="selected-btn">\u5df2\u9009</li></ul></div><div class="close"></div></div><div class="line_dot"></div><div class="list"><div class="list-all"></div><div class="list-selected" style="display:none"></div></div><div class="pager"><div class="action"><div class="form_btn form_btn_m form_btnmaj_m"><span class="form_btn_text submit-btn" style="width:60px;">\u786e\u5b9a</span></div><div class="form_btn form_btn_m form_btnsub_m"><span class="form_btn_text cancel-btn" style="width:60px;">\u53d6\u6d88</span></div></div><div class="qPager"><ul class="turn"><li class="pre" title="\u4e0a\u4e00\u9875"><a><em class="ico_pre"></em>\u4e0a\u4e00\u9875</a></li><li class="next" title="\u4e0b\u4e00\u9875"><a href="#" class="next-btn"><em class="ico_next"></em>\u4e0b\u4e00\u9875</a></li></ul><ul class="pages"></ul></div></div></div><div class="bg"></div></div>'
			},
			getData : function(a, b) {
				new Ajax.Request(this._options.action, {
							method : "post",
							onComplete : function(a) {
								a = eval("(" + a.responseText + ")");
								b(a)
							},
							parameters : a
						})
			},
			setAlbumData : function(a) {
				this.data.albumData = a
			},
			getAlbumData : function() {
				return this.data.albumData || []
			},
			onSubmit : function() {
				this._options.onSubmit(this.getAlbumData());
				this.close()
			},
			onCancel : function() {
				this._options.onCancel();
				this.close()
			},
			close : function() {
				this._options.onClose();
				this.panel.style.display = "none";
				this.layer.close()
			}
		});
		var h = document.all ? !0 : !1, j = h
				&& 6 == /MSIE (\d)\.0/i.exec(navigator.userAgent)[1], s = function(
				c) {
			this.options = {
				Lay : null,
				Color : "#000",
				Opacity : 50,
				zIndex : f()
			};
			a(this.options, c);
			this.Lay = document.body.insertBefore(
					document.createElement("div"), document.body.childNodes[0]);
			this.Color = this.options.Color;
			this.Opacity = parseInt(this.options.Opacity);
			this.zIndex = parseInt(this.options.zIndex);
			with (this.Lay.style)
				display = "none", zIndex = this.zIndex, left = top = 0, position = "fixed", width = height = "100%";
			if (j)
				this.Lay.style.position = "absolute", this._resize = b(this,
						function() {
							this.Lay.style.width = Math.max(
									document.documentElement.scrollWidth,
									document.documentElement.clientWidth)
									+ "px";
							this.Lay.style.height = Math.max(
									document.documentElement.scrollHeight,
									document.documentElement.clientHeight)
									+ "px"
						}), this.Lay.innerHTML = '<iframe style="position:absolute;top:0;left:0;width:100%;height:100%;filter:alpha(opacity=0);"></iframe>'
		};
		a(s.prototype, {
			show : function() {
				j
						&& (this._resize(), window.attachEvent("onresize",
								this._resize));
				with (this.Lay.style)
					h
							? filter = "alpha(opacity:" + this.Opacity + ")"
							: opacity = this.Opacity / 100, backgroundColor = this.Color, display = "block"
			},
			close : function() {
				this.Lay.style.display = "none";
				j && window.detachEvent("onresize", this._resize)
			}
		});
		window.AlbumSelector = g
	})();
	Y = [];
	N = [];
	O = ["Maxthon", "SE 2.X", "QQBrowser"];
	var qa = {
		101 : "\u8bf7\u586b\u5199\u6807\u9898\uff0c\u6700\u591a60\u4e2a\u5b57\u7b26",
		102 : "\u6807\u9898\u6700\u591a\u80fd\u586b\u519960\u4e2a\u5b57\u7b26",
		103 : "\u6807\u9898\u4e0d\u53ef\u4ee5\u53ea\u7528\u6570\u5b57\u8868\u793a\uff0c\u8bf7\u8865\u5145\u6216\u4f7f\u7528\u7b80\u6d01\u660e\u786e\u7684\u6587\u5b57",
		104 : "\u6807\u9898\u542b\u6709\u7981\u5fcc\u8bcd\uff0c\u8bf7\u60a8\u4fee\u6539\u540e\u91cd\u65b0\u4fdd\u5b58",
		121 : "\u8bf7\u586b\u5199\u6807\u7b7e,\u6807\u7b7e\u95f4\u7528\u7a7a\u683c\u6216\u9017\u53f7\u5206\u9694",
		122 : "\u6807\u7b7e\u6700\u591a\u4e3a10\u4e2a",
		123 : "\u6807\u7b7e\u542b\u6709\u7981\u5fcc\u8bcd\uff0c\u8bf7\u60a8\u4fee\u6539\u540e\u91cd\u65b0\u4fdd\u5b58",
		124 : "\u5355\u4e2a\u6807\u7b7e\u6700\u5c112\u4e2a\u5b57\u7b26",
		125 : "\u5355\u4e2a\u6807\u7b7e\u6700\u591a12\u4e2a\u5b57\u7b26",
		131 : "\u8bf7\u9009\u62e9\u4e00\u4e2a\u5206\u7c7b",
		132 : "\u60a8\u9009\u62e9\u7684\u5206\u7c7b\u4e2a\u6570\u8d85\u8fc7\u4e861\u4e2a\uff0c\u8bf7\u51cf\u5c11\u5206\u7c7b\u9009\u62e9\u4e2a\u6570",
		141 : "\u7b80\u4ecb\u542b\u6709\u7981\u5fcc\u8bcd\uff0c\u8bf7\u60a8\u4fee\u6539\u540e\u91cd\u65b0\u4fdd\u5b58",
		142 : "\u7b80\u4ecb\u6700\u591a\u80fd\u586b\u51992000\u4e2a\u5b57\u7b26",
		191 : "\u8bf7\u586b\u5199\u5bc6\u7801",
		192 : "\u5bc6\u7801\u6700\u591a32\u4f4d",
		193 : "\u5bc6\u7801\u53ea\u80fd\u4f7f\u7528\u6570\u5b57\u3001\u5b57\u6bcd"
	}, ca = "\u4f7f\u7528\u8c37\u6b4c\u548c\u706b\u72d0\u6d4f\u89c8\u5668\u4e0a\u4f20\u89c6\u9891\u53ef\u4ee5\u5728\u4e00\u5468\u5185\u65ad\u70b9\u7eed\u4f20,\u4f7f\u7528\u8c37\u6b4c\u6216\u706b\u72d0\u7b49\u6d4f\u89c8\u5668\uff0c\u5c06\u89c6\u9891\u6587\u4ef6\u76f4\u63a5\u62d6\u62fd\u5230\u9875\u9762\u5185\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e0a\u4f20\u7684\u54e6~,\u4f7f\u7528IE8\u6216\u66f4\u9ad8\u7248\u672c\u7684\u6d4f\u89c8\u5668\u4e0a\u4f20\u89c6\u9891\uff0c\u5c06\u4f1a\u66f4\u52a0\u5feb\u901f\u7a33\u5b9a~,\u4f7f\u7528\u8c37\u6b4c\u6216\u706b\u72d0\u7b49\u652f\u6301html5\u4e0a\u4f20\u7684\u6d4f\u89c8\u5668\uff0c\u4e0a\u4f20\u5355\u4e2a\u89c6\u9891\u7684\u6700\u5927\u5bb9\u91cf\u652f\u6301\u52302G\uff01,\u4e0a\u4f20\u4e2d\u65ad\u65f6\uff0c\u82e5\u4f7f\u7528\u7684\u662f\u8c37\u6b4c\u6216\u706b\u72d0\u7b49\u652f\u6301html5\u4e0a\u4f20\u7684\u6d4f\u89c8\u5668\uff0c\u518d\u6b21\u9009\u62e9\u540c\u4e00\u6587\u4ef6\u662f\u53ef\u4ee5\u4ece\u4e2d\u65ad\u5904\u7ee7\u7eed\u4f20\u7684~,\u4f7f\u7528\u4f18\u9177\u5ba2\u6237\u7aef\uff0c\u4e0d\u4f46\u652f\u6301\u6279\u91cf\u4e0a\u4f20\uff0c\u800c\u4e14\u5355\u4e2a\u89c6\u9891\u7684\u5bb9\u91cf\u6700\u5927\u652f\u630110G\uff01,\u901a\u8fc7\u624b\u673a\u62cd\u5ba2\u5ba2\u6237\u7aef\u62cd\u6444\u3001\u4e0a\u4f20\u89c6\u9891\uff0c\u4e0d\u4f46\u53ef\u4ee5\u7f16\u8f91\u7279\u6548\u3001\u5feb\u901f\u5206\u4eab\uff0c\u800c\u4e14\u8d85\u7701\u6d41\u91cf\u5462~"
			.split(",");
	l.isFlashVersionAtLeast(10, 0, 45);
	var L = !1, M = !1, ra = window.FormData ? !0 : !1, B = !1, F = "flash", X;
	"undefined" != typeof File
			&& "undefined" != typeof (new XMLHttpRequest).upload && (L = !0);
	if (L
			&& ("slice" in File.prototype || "mozSlice" in File.prototype || "webkitSlice" in File.prototype))
		M = !0;
	(function() {
		for (var a = 0; a < O.length; a++)
			-1 !== navigator.userAgent.indexOf(O[a]) && (M = !1)
	})();
	B = L && (ra || M);
	V.prototype = {
		constructor : V,
		name : "uploader",
		buttonState : "up",
		swfContainerId : null,
		swfReference : null,
		queue : null,
		initializer : function() {
			this.publish("fileselect");
			this.publish("uploadstart");
			this.publish("fileuploadstart");
			this.publish("uploadprogress");
			this.publish("totaluploadprogress");
			this.publish("uploadcomplete");
			this.publish("alluploadscomplete");
			this.publish("uploaderror");
			this.publish("mouseenter");
			this.publish("mouseleave");
			this.publish("mousedown");
			this.publish("mouseup");
			this.publish("click")
		},
		render : function(a) {
			a && (this.renderUI(a), this.bindUI())
		},
		renderUI : function(a) {
			this.contentBox = a;
			this.contentBox.style.position = "relative";
			var b = C(o(
					"<div id='{swfContainerId}' style='position:absolute;top:0px; left: 0px; margin: 0; padding: 0; border: 0; width:100%; height:100%'></div>",
					{
						swfContainerId : this.swfContainerId
					}));
			b.style.width = a.offsetWidth + "px";
			b.style.height = a.offsetHeight + "px";
			this.contentBox.appendChild(b);
			this.swfReference = new l(b, this.get("swfURL"), {
						version : "10.0.45",
						fixedAttributes : {
							wmode : "transparent",
							allowScriptAccess : "always",
							allowNetworking : "all",
							scale : "noscale"
						}
					})
		},
		bindUI : function() {
			this.swfReference.on("swfReady", function() {
						this.setMultipleFiles();
						this.setFileFilters();
						this.triggerEnabled();
						this.after("multipleFilesChange",
								this.setMultipleFiles, this);
						this.after("fileFiltersChange", this.setFileFilters,
								this);
						this.after("enabledChange", this.triggerEnabled, this)
					}, this);
			this.swfReference.on("fileselect", this.updateFileList, this);
			this.swfReference.on("mouseenter", function() {
						this.setContainerClass("hover", !0)
					}, this);
			this.swfReference.on("mouseleave", function() {
						this.setContainerClass("hover", !1)
					}, this)
		},
		setContainerClass : function(a, b) {
			b ? n(this.contentBox, this.get("containerClassNames")[a]) : p(
					this.contentBox, this.get("containerClassNames")[a])
		},
		setFileFilters : function() {
			this.swfReference
					&& 0 < this.get("fileFilters").length
					&& this.swfReference.callSWF("setFileFilters", [this
									.get("fileFilters")])
		},
		setMultipleFiles : function() {
			this.swfReference
					&& this.swfReference.callSWF("setAllowMultipleFiles", [this
									.get("multipleFiles")])
		},
		triggerEnabled : function() {
			this.get("enabled")
					? (this.swfReference.callSWF("enable"), this.swfReference.swf
							.setAttribute("aria-disabled", "false"))
					: (this.swfReference.callSWF("disable"), this.swfReference.swf
							.setAttribute("aria-disabled", "true"))
		},
		updateFileList : function(a) {
			this.swfReference.swf.focus();
			for (var a = a.fileList, b = [], c = this.swfReference, d = 0; d < a.length; d++) {
				var e = {};
				e.id = a[d].fileId;
				e.name = a[d].fileReference.name;
				e.size = a[d].fileReference.size;
				e.type = a[d].fileReference.type;
				e.dateCreated = a[d].fileReference.creationDate;
				e.dateModified = a[d].fileReference.modificationDate;
				e.uploader = c;
				b.push(new E(e))
			}
			0 < b.length && this.fire("fileselect", {
						fileList : b
					});
			x(4007035)
		},
		uploadEventHandler : function(a) {
			switch (a.type) {
				case "file:uploadstart" :
					this.fire("fileuploadstart", a);
					break;
				case "file:uploadprogress" :
					this.fire("uploadprogress", a);
					break;
				case "uploaderqueue:totaluploadprogress" :
					this.fire("totaluploadprogress", a);
					break;
				case "file:uploadcomplete" :
					this.fire("uploadcomplete", a);
					break;
				case "uploaderqueue:alluploadscomplete" :
					this.queue = null;
					this.fire("alluploadscomplete", a);
					break;
				case "file:uploaderror" :
				case "uploaderqueue:uploaderror" :
					this.fire("uploaderror", a);
					break;
				case "file:uploadcancel" :
				case "uploaderqueue:uploadcancel" :
					this.fire("uploadcancel", a)
			}
		},
		upload : function(a, b, c) {
			var b = b || this.get("uploadURL"), c = c
					|| this.get("postVarsPerFile"), d = a.id, c = c
					.hasOwnProperty(d) ? c[d] : c;
			a instanceof E
					&& (a.on("uploadstart", this.uploadEventHandler, this), a
							.on("uploadprogress", this.uploadEventHandler, this), a
							.on("uploadcomplete", this.uploadEventHandler, this), a
							.on("uploaderror", this.uploadEventHandler, this), a
							.on("uploadcancel", this.uploadEventHandler, this), a
							.startUpload(b, c, this.get("fileFieldName")))
		}
	};
	W.prototype = {
		constructor : W,
		name : "uploader",
		buttonBinding : null,
		fileInputField : null,
		queue : null,
		initializer : function() {
			this.publish("fileselect");
			this.publish("uploadstart");
			this.publish("fileuploadstart");
			this.publish("uploadprogress");
			this.publish("totaluploadprogress");
			this.publish("uploadcomplete");
			this.publish("alluploadscomplete");
			this.publish("uploaderror");
			this.publish("dragenter");
			this.publish("dragover");
			this.publish("dragleave");
			this.publish("drop")
		},
		render : function(a) {
			a && (this.renderUI(a), this.bindUI())
		},
		renderUI : function(a) {
			this.contentBox = a;
			this.fileInputField = C("<input type='file' style='visibility:hidden; width:0px; height: 0px;'>");
			this.contentBox.appendChild(this.fileInputField)
		},
		bindUI : function() {
			this.bindSelectButton();
			this.setMultipleFiles();
			this.setFileFilters();
			this.bindDropArea();
			this.triggerEnabled();
			this.after("multipleFilesChange", this.setMultipleFiles, this);
			this.after("fileFiltersChange", this.setFileFilters, this);
			this.after("enabledChange", this.triggerEnabled, this);
			this.after("dragAndDropAreaChange", this.bindDropArea, this);
			k(this.fileInputField, "change", i(this.updateFileList, this))
		},
		rebindFileField : function() {
			this.fileInputField.parentNode.removeChild(this.fileInputField);
			this.fileInputField = C("<input type='file' style='visibility:hidden; width:0px; height: 0px;'>");
			this.contentBox.appendChild(this.fileInputField);
			this.setMultipleFiles();
			this.setFileFilters();
			k(this.fileInputField, "change", i(this.updateFileList, this))
		},
		bindDropArea : function() {
			var a = this.get("dragAndDropArea");
			null !== a
					&& (k(a, "drop", i(this.ddEventHandler, this)), k(a,
							"dragenter", i(this.ddEventHandler, this)), k(a,
							"dragover", i(this.ddEventHandler, this)), k(a,
							"dragleave", i(this.ddEventHandler, this)))
		},
		bindSelectButton : function() {
			this.buttonBinding = i(this.openFileSelectDialog, this);
			k(this.contentBox, "click", this.buttonBinding)
		},
		ddEventHandler : function(a) {
			a = a || window.event;
			a.preventDefault ? a.preventDefault() : a.returnValue = !1;
			a.stopPropagation ? a.stopPropagation() : a.cancelBubble = !0;
			switch (a.type) {
				case "dragenter" :
					this.fire("dragenter");
					break;
				case "dragover" :
					this.fire("dragover");
					break;
				case "dragleave" :
					this.fire("dragleave");
					break;
				case "drop" :
					for (var a = a.dataTransfer.files, b = [], c = 0; c < a.length; c++)
						b.push(new u(a[c]));
					0 < b.length && this.fire("fileselect", {
								fileList : b
							});
					x(4007100);
					this.fire("drop")
			}
		},
		setButtonClass : function(a, b) {
			b ? n(this.contentBox, this.get("buttonClassNames")[a]) : p(
					this.contentBox, this.get("buttonClassNames")[a])
		},
		setMultipleFiles : function() {
			!0 === this.get("multipleFiles")
					&& this.fileInputField.setAttribute("multiple", "multiple")
		},
		setFileFilters : function() {
			var a = this.get("fileFilters");
			0 < a.length ? this.fileInputField.setAttribute("accept", a
							.join(",")) : this.fileInputField.setAttribute(
					"accept", "")
		},
		triggerEnabled : function() {
			if (this.get("enabled") && null === this.buttonBinding)
				this.bindSelectButton(), this.setButtonClass("disabled", !1);
			else if (!this.get("enabled") && this.buttonBinding)
				U(this.contentBox, "click", this.buttonBinding), this.buttonBinding = null, this
						.setButtonClass("disabled", !0)
		},
		updateFileList : function(a) {
			for (var a = a.target.files, b = [], c = 0; c < a.length; c++)
				b.push(new u(a[c]));
			0 < b.length && this.fire("fileselect", {
						fileList : b
					});
			this.rebindFileField();
			x(4007036)
		},
		uploadEventHandler : function(a) {
			switch (a.type) {
				case "file:uploadstart" :
					this.fire("fileuploadstart", a);
					break;
				case "file:uploadprogress" :
					this.fire("uploadprogress", a);
					break;
				case "uploaderqueue:totaluploadprogress" :
					this.fire("totaluploadprogress", a);
					break;
				case "file:uploadcomplete" :
					this.fire("uploadcomplete", a);
					break;
				case "uploaderqueue:alluploadscomplete" :
					this.queue = null;
					this.fire("alluploadscomplete", a);
					break;
				case "file:uploaderror" :
				case "uploaderqueue:uploaderror" :
					this.fire("uploaderror", a);
					break;
				case "file:uploadcancel" :
				case "uploaderqueue:uploadcancel" :
					this.fire("uploadcancel", a)
			}
		},
		openFileSelectDialog : function(a) {
			this.fileInputField.click && a.target != this.fileInputField
					&& this.fileInputField.click()
		},
		upload : function(a, b, c) {
			var b = b || this.get("uploadURL"), c = c
					|| this.get("postVarsPerFile"), d = a.id, c = c
					.hasOwnProperty(d) ? c[d] : c;
			a instanceof u
					&& (a.on("uploadstart", this.uploadEventHandler, this), a
							.on("uploadprogress", this.uploadEventHandler, this), a
							.on("uploadcomplete", this.uploadEventHandler, this), a
							.on("uploaderror", this.uploadEventHandler, this), a
							.on("uploadcancel", this.uploadEventHandler, this), a
							.startUpload(b, c, this.get("fileFieldName")))
		}
	};
	E.prototype = {
		constructor : E,
		name : "file",
		initializer : function() {
			this.id = G("file")
		},
		swfEventHandler : function(a) {
			if (a.id === this.get("id"))
				switch (a.type) {
					case "uploadstart" :
						this.fire("uploadstart", {
									uploader : this.get("uploader")
								});
						break;
					case "uploadprogress" :
						var b = (new Date).getTime(), c = (b - this.preTime)
								/ 1E3, d = 0;
						if (1 <= c || 0 == this.bytesPrevLoaded) {
							this.bytesSpeed = Math
									.round((a.bytesLoaded - this.bytesPrevLoaded)
											/ c);
							this.bytesPrevLoaded = a.bytesLoaded;
							this.preTime = b;
							5 < this.bytesSpeeds.length
									&& this.bytesSpeeds.shift();
							this.bytesSpeeds.push(this.bytesSpeed);
							for (b = 0; b < this.bytesSpeeds.length; b++)
								d += this.bytesSpeeds[b];
							this.bytesSpeed = Math.round(d
									/ this.bytesSpeeds.length);
							this.remainTime = Math
									.ceil((a.bytesTotal - a.bytesLoaded)
											/ this.bytesSpeed)
						}
						this.fire("uploadprogress", {
									originEvent : a,
									bytesLoaded : a.bytesLoaded,
									bytesSpeed : this.bytesSpeed,
									bytesTotal : a.bytesTotal,
									remainTime : this.remainTime,
									percentLoaded : Math.min(100, Math
													.round(1E4 * a.bytesLoaded
															/ a.bytesTotal)
													/ 100)
								});
						break;
					case "uploadcomplete" :
						this.fire("uploadfinished", {
									originEvent : a
								});
						break;
					case "uploadcompletedata" :
						this.fire("uploadcomplete", {
									originEvent : a,
									data : a.data
								});
						break;
					case "uploadcancel" :
						this.fire("uploadcancel", {
									originEvent : a
								});
						break;
					case "uploaderror" :
						this.fire("uploaderror", {
									originEvent : a,
									status : a.status,
									statusText : a.message,
									source : a.source
								})
				}
		},
		startUpload : function(a, b, c) {
			if (this.get("uploader")) {
				var d = this.get("uploader"), c = c || "FileData", e = this
						.get("id"), b = b || null;
				d.on("uploadstart", this.swfEventHandler, this);
				d.on("uploadprogress", this.swfEventHandler, this);
				d.on("uploadcomplete", this.swfEventHandler, this);
				d.on("uploadcompletedata", this.swfEventHandler, this);
				d.on("uploaderror", this.swfEventHandler, this);
				this.remainTime = this.bytesSpeed = this.bytesPrevLoaded = 0;
				this.bytesSpeeds = [];
				if (!this.preTime)
					this.preTime = (new Date).getTime();
				d.callSWF("upload", [e, a, b, c])
			}
		},
		cancelUpload : function() {
			this.get("uploader")
					&& (this.get("uploader")
							.callSWF("cancel", [this.get("id")]), this
							.fire("uploadcancel"))
		}
	};
	var u = function(a) {
		this.remainTime = this.bytesSpeed = this.bytesStart = this.bytesPrevLoaded = 0;
		this.bytesSpeeds = [];
		this.retryTimes = this.preTime = 0;
		this.config = {
			id : "",
			name : "",
			size : "",
			type : "",
			dateCreated : "",
			dateModified : "",
			uploader : "",
			uploadURL : "",
			serverAddress : "",
			portionSize : 10485760,
			parameters : {},
			fileFieldName : "FileData",
			uploadMethod : "formUpload"
		};
		y.apply(this, arguments)
	};
	u.isValidFile = function(a) {
		return "undefined" != typeof File && a instanceof File
	};
	u.canUpload = function() {
		return "undefined" != typeof FormData
	};
	u.prototype = {
		constructor : u,
		name : "file",
		initializer : function(a) {
			var b = null, b = u.isValidFile(a) ? a : u.isValidFile(a.file)
					? a.file
					: !1;
			this.get("id") || this.set("id", G("file"));
			if (b && u.canUpload()) {
				if (!this.file)
					this.file = b;
				this.get("name") || this.set("name", b.name || b.fileName);
				if (this.get("size") != (b.size || b.fileSize))
					this.set("size", b.size || b.fileSize);
				this.get("type") || this.set("type", b.type);
				b.lastModifiedDate && !this.get("dateModified")
						&& this.set("dateModified", b.lastModifiedDate)
			}
		},
		uploadEventHandler : function(a) {
			var b = this.xhr, c = this.get("uploadMethod");
			switch (a.type) {
				case "progress" :
					var b = this.get("size"), c = this.bytesStart + a.loaded, d = (new Date)
							.getTime(), e = (d - this.preTime) / 1E3, f = 0;
					if (1 <= e || 0 === this.bytesSpeeds.length) {
						this.bytesSpeed = Math.round((c - this.bytesPrevLoaded)
								/ e);
						this.bytesPrevLoaded = c;
						this.preTime = d;
						5 < this.bytesSpeeds.length && this.bytesSpeeds.shift();
						this.bytesSpeeds.push(this.bytesSpeed);
						for (d = 0; d < this.bytesSpeeds.length; d++)
							f += this.bytesSpeeds[d];
						this.bytesSpeed = Math.round(f
								/ this.bytesSpeeds.length);
						this.remainTime = Math.ceil((b - c) / this.bytesSpeed)
					}
					this.fire("uploadprogress", {
								originEvent : a,
								bytesLoaded : c,
								bytesTotal : b,
								bytesSpeed : this.bytesSpeed,
								remainTime : this.remainTime,
								percentLoaded : Math.min(100, Math.floor(1E4
												* c / b)
												/ 100)
							});
					break;
				case "load" :
					"resumeUpload" !== c && 200 <= b.status && 299 >= b.status
							? (true
									? this.fire("uploadcomplete", {
												originEvent : a,
												data : "{\"upload_server_name\":\"MTcwNjU4NTQw\"}"
											})
									: c.file_transfered
											? this
													.streamUpload(c.file_transfered)
											: this.fire("uploaderror", {
														originEvent : a,
														status : b.status,
														statusText : b.statusText,
														source : "http"
													}))
							: "resumeUpload" === c && 308 == b.status
									? (a = /bytes=(\d+)-(\d+)/.exec(b
											.getResponseHeader("Range")), this
											.streamUpload(parseInt(a[2])))
									: "resumeUpload" === c && 404 == b.status
											? this.streamUpload()
											: this.fire("uploaderror", {
														originEvent : a,
														status : b.status,
														statusText : b.statusText,
														source : "http"
													});
					break;
				case "error" :
					if ("formUpload" !== c && 360 > this.retryTimes) {
						this.retryTimes++;
						var g = this;
						10 > this.retryTimes
								? this.resumeUpload()
								: (this.timeoutHandler
										&& clearTimeout(this.timeoutHandler), this.timeoutHandler = setTimeout(
										function() {
											g.resumeUpload()
										}, 1E4))
					} else
						this.fire("uploaderror", {
									originEvent : a,
									status : b.status,
									statusText : b.statusText,
									source : "io"
								});
					break;
				case "abort" :
					this.fire("uploadcancel", {
								originEvent : a
							});
					break;
				case "readystatechange" :
					this.fire("readystatechange", {
								readyState : a.target.readyState,
								originEvent : a
							})
			}
		},
		resetXhr : function() {
			if (this.xhr) {
				try {
					this.xhr.upload.removeEventListener("progress",
							this.boundEventHandler), this.xhr.upload
							.removeEventListener("error",
									this.boundEventHandler), this.xhr.upload
							.removeEventListener("abort",
									this.boundEventHandler), this.xhr
							.removeEventListener("load", this.boundEventHandler), this.xhr
							.removeEventListener("error",
									this.boundEventHandler), this.xhr
							.removeEventListener("readystatechange",
									this.boundEventHandler)
				} catch (a) {
				}
				this.xhr = null
			}
		},
		startUpload : function(a, b, c) {
			var d = this.get("uploadMethod");
			this.set("uploadURL", K(b, a));
			this.set("parameters", b);
			this.set("fileFieldName", c);
			this.remainTime = this.bytesSpeed = this.bytesPrevLoaded = 0;
			this.bytesSpeeds = [];
			this.resetXhr();
			switch (d) {
				case "formUpload" :
					this.formUpload();
					break;
				case "streamUpload" :
					this.streamUpload();
					break;
				case "resumeUpload" :
					this.resumeUpload()
			}
		},
		formUpload : function() {
			this.resetXhr();
			this.xhr = new XMLHttpRequest;
			this.boundEventHandler = i(this.uploadEventHandler, this);
			var a = new FormData, b = this.get("fileFieldName"), c = this
					.get("uploadURL"), d = this.xhr, e = d.upload;
			this.set("uploadMethod", "formUpload");
			this.bytesStart = 0;
			if (!this.preTime)
				this.preTime = (new Date).getTime();
			a.append(b, this.file);
			d.addEventListener("loadstart", this.boundEventHandler, !1);
			e.addEventListener("progress", this.boundEventHandler, !1);
			d.addEventListener("load", this.boundEventHandler, !1);
			d.addEventListener("error", this.boundEventHandler, !1);
			e.addEventListener("error", this.boundEventHandler, !1);
			e.addEventListener("abort", this.boundEventHandler, !1);
			d.addEventListener("abort", this.boundEventHandler, !1);
			d.addEventListener("loadend", this.boundEventHandler, !1);
			d.addEventListener("readystatechange", this.boundEventHandler, !1);
			d.open("POST", c, !0);
			d.send(a);
			this.fire("uploadstart", {
						xhr : d
					})
		},
		streamUpload : function(a) {
			this.resetXhr();
			this.xhr = new XMLHttpRequest;
			this.boundEventHandler = i(this.uploadEventHandler, this);
			var a = a || 0, b = null, c = 0;
			this.get("fileFieldName");
			var d = this.get("size");
			this.get("parameters");
			var e = this.get("uploadURL"), f = this.xhr, g = f.upload;
			this.set("uploadMethod", "streamUpload");
			this.bytesStart = a;
			if (a < d)
				b = this.sliceFile(this.file, a), c = b.size;
			if (!this.preTime)
				this.preTime = (new Date).getTime(), this.bytesPrevLoaded = a;
			c = "bytes " + (Math.min(a, d) + 1) + "-" + Math.min(a + c, d)
					+ "/" + d;
			f.addEventListener("loadstart", this.boundEventHandler, !1);
			g.addEventListener("progress", this.boundEventHandler, !1);
			f.addEventListener("load", this.boundEventHandler, !1);
			f.addEventListener("error", this.boundEventHandler, !1);
			g.addEventListener("error", this.boundEventHandler, !1);
			g.addEventListener("abort", this.boundEventHandler, !1);
			f.addEventListener("abort", this.boundEventHandler, !1);
			f.addEventListener("loadend", this.boundEventHandler, !1);
			f.addEventListener("readystatechange", this.boundEventHandler, !1);
			f.open("POST", e, !0);
			f.setRequestHeader("Content-Range", c);
			f.send(b);
			0 === a && this.fire("uploadstart", {
						xhr : f
					})
		},
		resumeUpload : function() {
			this.resetXhr();
			this.xhr = new XMLHttpRequest;
			this.boundEventHandler = i(this.uploadEventHandler, this);
			var a = this.get("uploadURL"), b = this.xhr;
			this.set("uploadMethod", "resumeUpload");
			b.addEventListener("loadstart", this.boundEventHandler, !1);
			b.addEventListener("load", this.boundEventHandler, !1);
			b.addEventListener("error", this.boundEventHandler, !1);
			b.addEventListener("abort", this.boundEventHandler, !1);
			b.addEventListener("loadend", this.boundEventHandler, !1);
			b.addEventListener("readystatechange", this.boundEventHandler, !1);
			b.open("GET", a, !0);
			b.setRequestHeader("Content-Range", "bytes */*");
			b.send(null)
		},
		sliceFile : function(a, b) {
			var c = this.get("portionSize"), b = b || 0;
			return a.slice ? a.slice(b, b + c) : a.webkitSlice ? a.webkitSlice(
					b, b + c) : a.mozSlice ? a.mozSlice(b, b + c) : a
		},
		cancelUpload : function() {
			this.xhr && (this.xhr.abort(), this.resetXhr())
		}
	};
	B ? (X = W, F = "html5") : (X = V, F = "flash");
	z.applyTo = function(a, b) {
		if (!a || "SWF.eventHandler" != a)
			return null;
		try {
			return l.eventHandler.apply(l, b)
		} catch (c) {
			return null
		}
	};
	z.FIRSTUPLOAD = 1 != function(a) {
		for (var a = a + "=", b = document.cookie.split(";"), c = 0; c < b.length; c++) {
			for (var d = b[c]; " " == d.charAt(0);)
				d = d.substring(1, d.length);
			if (0 == d.indexOf(a))
				return d.substring(a.length, d.length)
		}
		return null
	}("_up_q_t_");
	z.prototype = {
		constructor : z,
		name : "uploader",
		initializer : function() {
			this.startPanel = document.getElementById("upload-start");
			this.containerPanel = document.getElementById("upload-container");
			this.template = document.getElementById("upload-template").innerHTML;
			this.layer = new ba;
			this.fileUploader = new X(this.config);
			this.fileUploader
					.render(this.getNode("uploadHot", this.startPanel));
			this.fileUploader.on("uploadprogress", this.uploadProgress, this);
			this.fileUploader.on("uploadcomplete", this.uploadComplete, this);
			this.fileUploader.on("uploaderror", this.uploadError, this);
			this.fileUploader.on("fileselect", this.fileSelect, this);
			this.showTips();
			k(window, "beforeunload", i(this.unloadHandler, this))
		},
		startUpload : function(a) {
			var b = this.get("prefix") + a.get("id"), c = C(o(
					"<div id='{contentBoxId}'></div>", {
						contentBoxId : b
					}));
			c.innerHTML = this.template;
			this.uploadInfo[b] = {
				serverAddress : "",
				serverName : "",
				uploadToken : "",
				fileUploaded : !1,
				metaSaved : !1,
				uploadComplete : !1,
				metaData : {},
				albumData : [],
				file : a,
				disabled : !1,
				tagDisabled : !1,
				progressNode : this.getNode("upload-progress", c),
				successNode : this.getNode("upload-success", c)
			};
			this.albumSelector = this.createAlbumSelector(b);
			this.renderUI(b);
			this.bindUI(b);
			B
					? this.startPanel.style.display = "none"
					: (this.startPanel.style.height = "1px", this.startPanel.style.width = "1px");
			this.containerPanel.appendChild(c);
			this.createUploadTask(b)
		},
		renderUI : function(a) {
			for (var b = this.uploadInfo[a].progressNode, c = this.uploadInfo[a].file, d = this
					.getNode("upload-form", b), c = c.get("name").replace(
					/(.*)\.\S*/, "$1"), e = window.tags ? window.tags.replace(
					/\s+/g, ",").split(",") : [], f = 0; f < e.length; f++) {
				var g = v(t(e[f]));
				if (2 <= g && 12 >= g)
					this.renderTag({
								title : "",
								name : t(e[f])
							}, a), this.uploadInfo[a].tagDisabled = !0, this
							.getNode("meta-tags", b).setAttribute("disabled",
									!0)
			}
			this.getNode("upTitle", b).innerHTML = R(c, 60);
			d.title.value = R(c, 60)
		},
		bindUI : function(a) {
			var b = this.uploadInfo[a].progressNode, c = this.getNode(
					"upload-form", b), d = this.getNode("last-info", b), e = this
					.getNode("meta-cate", b), f = this.getNode(
					"meta-cate-list", b), g = this.getNode("meta-source", b), h = this
					.getNode("meta-public", b), j = this
					.getNode("meta-save", b), s = this.getNode("top-save", b), I = this
					.getNode("upload-cancel", b), J = this.getNode(
					"meta-album", b), n = w(b, "handler-qtips"), f = f
					.getElementsByTagName("a"), p = this.getNode(
					"meta-source-list", b).getElementsByTagName("dd"), l = this
					.getNode("meta-public-list", b).getElementsByTagName("dd"), m = this
					.getNode("meta-tags", b), t = this.getNode("meta-tags-my",
					b).getElementsByTagName("a"), o = "keyup", o = "onpropertychange" in c.memo
					? "oninput" in c.memo ? "keyup" : "propertychange"
					: "input", q = 0;
			for (; q < f.length; q++)
				k(f[q], "click", i(this.cateSelectHandler, this, {
									type : "click",
									nodeId : a
								}));
			for (q = 0; q < p.length; q++)
				k(p[q], "click", i(this.selectorHandler, this, {
									type : "sourceType",
									nodeId : a
								})), k(p[q], "mouseover", i(
								this.selectorHandler, this, {
									type : "mouseover",
									nodeId : a
								}));
			for (q = 0; q < l.length; q++)
				k(l[q], "click", i(this.selectorHandler, this, {
									type : "publicType",
									nodeId : a
								})), k(l[q], "mouseover", i(
								this.selectorHandler, this, {
									type : "mouseover",
									nodeId : a
								}));
			for (q = 0; q < t.length; q++)
				k(t[q], "click", i(this.addTag, this, {
									type : "myTag",
									nodeId : a
								}));
			for (q = 0; q < n.length; q++)
				k(n[q], "click", i(this.qtipsHandler, this, {
									type : "click",
									nodeId : a
								}));
			k(d, "click", i(this.lastVideoHander, this, {
								type : "click",
								nodeId : a
							}));
			k(j, "click", i(this.saveMetaInfo, this, {
								type : "click",
								nodeId : a
							}));
			k(s, "click", i(this.saveMetaInfo, this, {
								type : "click",
								nodeId : a
							}));
			k(I, "click", i(this.cancelUploadHandler, this, {
								type : "click",
								nodeId : a
							}));
			k(J, "click", i(this.albumHandler, this, {
								type : "click",
								nodeId : a
							}));
			k(c.title, "keyup", i(this.titleHandler, this, {
								type : "keyup",
								nodeId : a
							}));
			k(c.title, "blur", i(this.titleHandler, this, {
								type : "blur",
								nodeId : a
							}));
			k(c.title, "focus", i(this.titleHandler, this, {
								type : "focus",
								nodeId : a
							}));
			k(c.memo, o, i(this.memoHandler, this, {
								type : "keyup",
								nodeId : a
							}));
			k(c.memo, "focus", i(this.memoHandler, this, {
								type : "focus",
								nodeId : a
							}));
			k(c.memo, "blur", i(this.memoHandler, this, {
								type : "blur",
								nodeId : a
							}));
			k(c.videoPassword, "keyup", i(this.passwordHandler, this, {
								type : "keyup",
								nodeId : a
							}));
			k(c.videoPassword, "blur", i(this.passwordHandler, this, {
								type : "blur",
								nodeId : a
							}));
			k(c.videoPassword, "focus", i(this.passwordHandler, this, {
								type : "focus",
								nodeId : a
							}));
			k(e, "click", i(this.cateBtnHandler, this, {
								type : "click",
								nodeId : a
							}));
			k(g, "click", i(this.selectorBtnHandler, this, {
								type : "sourceType",
								nodeId : a
							}));
			k(h, "click", i(this.selectorBtnHandler, this, {
								type : "publicType",
								nodeId : a
							}));
			k(m, o, i(this.tagsHandler, this, {
								type : "input",
								nodeId : a
							}));
			k(m, "keydown", i(this.tagsHandler, this, {
								type : "keydown",
								nodeId : a
							}));
			k(m, "blur", i(this.tagsHandler, this, {
								type : "blur",
								nodeId : a
							}));
			k(m, "focus", i(this.tagsHandler, this, {
								type : "focus",
								nodeId : a
							}));
			k(this.getNode("meta-tags-box", b), "click", i(this.tagsBoxHandler,
							this, {
								type : "click",
								nodeId : a
							}));
			this.d_handler = i(this.documentHandler, this, {
						type : "click",
						nodeId : a
					});
			k(document, "click", this.d_handler)
		},
		saveMetaInfo : function(a, b) {
			var c = a || window.event, d = b.nodeId, e = this.uploadInfo[d].progressNode;
			this.getNode("upload-form", e);
			var f = this.getNode("meta-save", e), g = this.getNode(
					"meta-save-message", e), h = this.getNode("meta-tags-box",
					e), j = this, s = this.getMetaData(d);
			this.preventDefault(c);
			this.stopPropagation(c);
			if (this.uploadInfo[d].disabled || D(h, "form_input_error"))
				return !1;
			this.getNode("error-tags", e).style.display = "none";
			s.isSave
					? this.completeUpload(d, !0)
					: (n(f, "form_btnsub_l"), f.getElementsByTagName("span")[0].innerHTML = "\u4fdd\u5b58\u4e2d...", this
							.disable(d), g.style.display = "none", this
							.request("/QUpload/~ajax/saveVideoMetaData/", {
								method : "post",
								parameters : s.params,
								onComplete : function(a) {
									try {
										var c = eval("(" + a.responseText + ")");
										if (!0 === c)
											j.uploadInfo[d].metaData = s.params, j
													.completeUpload(d, !0);
										else {
											var e = Z(c) ? c.errors : [];
											j.showMetaErrors(e, b);
											p(f, "form_btnsub_l");
											f.getElementsByTagName("span")[0].innerHTML = "\u4fdd\u3000\u5b58";
											j.enable(d)
										}
									} catch (h) {
										p(f, "form_btnsub_l"), f
												.getElementsByTagName("span")[0].innerHTML = "\u4fdd\u3000\u5b58", n(
												g, "save_error"), g.innerHTML = "\u4fdd\u5b58\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u7f51\u7edc\u8bbe\u7f6e\u53ca\u767b\u5f55\u72b6\u6001\uff0c\u91cd\u65b0\u4fdd\u5b58", g.style.display = "", j
												.enable(d)
									}
								},
								onFailure : function() {
									p(f, "form_btnsub_l");
									f.getElementsByTagName("span")[0].innerHTML = "\u4fdd\u3000\u5b58";
									n(g, "save_error");
									g.innerHTML = "\u4fdd\u5b58\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u7f51\u7edc\u8bbe\u7f6e\u53ca\u767b\u5f55\u72b6\u6001\uff0c\u91cd\u65b0\u4fdd\u5b58";
									g.style.display = "";
									j.enable(d)
								}
							}))
		},
		getTagNames : function(a) {
			for (var a = (a = this.getNode("meta-tags-box", a)) ? a
					.getElementsByTagName("span") : [], b = [], c, d = 0; d < a.length; d++)
				(c = a[d].innerHTML) && b.push(c);
			return b.join(",")
		},
		getMetaData : function(a) {
			var b = this
					.getNode("upload-form", this.uploadInfo[a].progressNode), c = this.uploadInfo[a].metaData, d = !0, e = !0, b = {
				title : b.title.value,
				memo : b.memo.value,
				catIds : b.catIds.value,
				tags : b.tags.value,
				folderIds : b.folderIds.value,
				sourceType : b.sourceType.value,
				publicType : b.publicType.value,
				videoPassword : b.videoPassword.value,
				uploadToken : this.uploadInfo[a].uploadToken
			};
			if (this.uploadInfo[a].disabled)
				return !1;
			"\u4e3a\u4f60\u7684\u89c6\u9891\u53d6\u4e2a\u6807\u9898\u5427" == b.title
					&& (b.title = "");
			"\u4e3a\u4f60\u7684\u89c6\u9891\u53d6\u4e2a\u6807\u9898\u5427" == b.title
					&& (b.title = "");
			"1-32\u4f4d\u6570\u5b57\u3001\u5b57\u6bcd\uff0c\u533a\u5206\u5927\u5c0f\u5199" == b.videoPassword
					&& (b.videoPassword = "");
			for (var f in c)
				if (e = !1, b[f] != c[f]) {
					d = !1;
					break
				}
			return {
				isSave : d && !e,
				params : b
			}
		},
		completeUpload : function(a, b) {
			var c = this.uploadInfo[a].progressNode, d = this.getNode(
					"meta-save", c), e = this.getNode("meta-save-message", c), f = this, g = b
					? !0
					: this.getMetaData(a).isSave;
			if (!b && this.uploadInfo[a].disabled)
				return !1;
			g && this.uploadInfo[a].fileUploaded
					? (n(d, "form_btnsub_l"), d.getElementsByTagName("span")[0].innerHTML = "\u5b8c\u6210\u4e0a\u4f20\u4e2d...", e.style.display = "none", this
							.disable(a), this.request(
							"/QUpload/~ajax/completeUpload/", {
								method : "post",
								parameters : {
									uploadToken : this.uploadInfo[a].uploadToken,
									serverName : this.uploadInfo[a].serverName,
									client : F
								},
								onComplete : function(b) {
									try {
										eval("(" + b.responseText + ")")
												? f.renderSuccessPanel(a)
												: (p(d, "form_btnsub_l"), d
														.getElementsByTagName("span")[0].innerHTML = "\u4fdd\u3000\u5b58", n(
														e, "save_error"), e.innerHTML = "\u4fdd\u5b58\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u7f51\u7edc\u8bbe\u7f6e\u53ca\u767b\u5f55\u72b6\u6001\uff0c\u91cd\u65b0\u4fdd\u5b58", e.style.display = "", f
														.enable(a))
									} catch (c) {
										p(d, "form_btnsub_l"), d
												.getElementsByTagName("span")[0].innerHTML = "\u4fdd\u3000\u5b58", n(
												e, "save_error"), e.innerHTML = "\u4fdd\u5b58\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u7f51\u7edc\u8bbe\u7f6e\u53ca\u767b\u5f55\u72b6\u6001\uff0c\u91cd\u65b0\u4fdd\u5b58", e.style.display = "", f
												.enable(a)
									}
								},
								onFailure : function() {
									p(d, "form_btnsub_l");
									d.getElementsByTagName("span")[0].innerHTML = "\u4fdd\u3000\u5b58";
									n(e, "save_error");
									e.innerHTML = "\u4fdd\u5b58\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u7f51\u7edc\u8bbe\u7f6e\u53ca\u767b\u5f55\u72b6\u6001\uff0c\u91cd\u65b0\u4fdd\u5b58";
									e.style.display = "";
									f.enable(a)
								}
							}))
					: (!g && this.uploadInfo[a].fileUploaded
							? (e.style.display = "none", this.getNode("upTips",
									c).style.display = "block")
							: (p(d, "form_btnsub_l"), d
									.getElementsByTagName("span")[0].innerHTML = "\u4fdd\u3000\u5b58", n(
									e, "save_tips"), e.innerHTML = "<em></em>\u4fdd\u5b58\u6210\u529f\uff0c\u8bf7\u7b49\u5f85\u6587\u4ef6\u4e0a\u4f20\u5b8c\u6210", e.style.display = ""), this
							.enable(a))
		},
		disable : function(a) {
			var b = this.uploadInfo[a].progressNode, c = this.getNode(
					"upload-form", b);
			if (!this.uploadInfo[a].disabled)
				this.uploadInfo[a].tagDisabled
						|| this.getNode("meta-tags", b).setAttribute(
								"disabled", !0), c.title.setAttribute(
						"disabled", !0), c.memo.setAttribute("disabled", !0), c.videoPassword
						.setAttribute("disabled", !0), this.uploadInfo[a].disabled = !0
		},
		enable : function(a) {
			var b = this.uploadInfo[a].progressNode, c = this.getNode(
					"upload-form", b);
			if (this.uploadInfo[a].disabled)
				this.uploadInfo[a].tagDisabled
						|| this.getNode("meta-tags", b).removeAttribute(
								"disabled", !1), c.title.removeAttribute(
						"disabled", !1), c.memo.removeAttribute("disabled", !1), c.videoPassword
						.removeAttribute("disabled", !1), this.uploadInfo[a].disabled = !1
		},
		cancelUpload : function(a) {
			var b = this.uploadInfo[a].file;
			b && b.cancelUpload && b.cancelUpload();
			this.showTips();
			this.uploadInfo[a] && delete this.uploadInfo[a];
			U(document, "click", this.d_handler);
			this.containerPanel.innerHTML = "";
			B
					? this.startPanel.style.display = "block"
					: (this.startPanel.style.height = "auto", this.startPanel.style.width = "970px");
			x(4007042)
		},
		cancelUploadHandler : function(a, b) {
			var c = a || window.event, d = b.nodeId, e = document
					.getElementById("upload-qwindow"), f = this.getNode(
					"winclose", e), g = this.getNode("form_btnmaj_s", e), h = this
					.getNode("form_btnsub_s", e), j = this;
			e.style.display = "none";
			this.preventDefault(c);
			this.stopPropagation(c);
			if (this.uploadInfo[d].disabled)
				return !1;
			this.uploadInfo[d] && !this.uploadInfo[d].uploadComplete
					? (c = function(a) {
						var b = document.getElementById("upload-qwindow"), a = a
								|| window.event;
						(a = (a.target || a.srcElement)
								.getAttribute("data-action"))
								&& "submit" == a && j.cancelUpload(d);
						b.style.display = "none";
						j.layer && j.layer.close()
					}, f.onclick = c, g.onclick = c, h.onclick = c, this.layer
							.show(), e.style.display = "block")
					: this.cancelUpload(d)
		},
		albumHandler : function(a, b) {
			var c = a || window.event, d = b.nodeId, e = b.type;
			this.preventDefault(c);
			this.stopPropagation(c);
			if (this.uploadInfo[d].disabled)
				return !1;
			this.removeSuccessMessage(d);
			switch (e) {
				case "click" :
					this.albumSelector
							.setAlbumData(this.uploadInfo[d].albumData), this.albumSelector
							.show()
			}
		},
		createAlbumSelector : function(a) {
			var b = this;
			return new AlbumSelector({
						button : null,
						onSubmit : function(c) {
							b.setAlbumData(c, a)
						}
					})
		},
		setAlbumData : function(a, b) {
			var c = this.uploadInfo[b].progressNode, d = this.getNode(
					"meta-album-list", c), e = this.getNode("meta-album", c), c = this
					.getNode("upload-form", c), f = [], g = [];
			if (this.uploadInfo[b].disabled)
				return !1;
			if (a.length) {
				for (var h = 0; h < a.length; h++)
					g.push(a[h].folderId), f.push(a[h].folderName);
				this.uploadInfo[b].albumData = a;
				if (d)
					d.innerHTML = f.join().slice(0, 8)
							+ '...<span class="special">\u7b49' + a.length
							+ "\u4e2a\u4e13\u8f91</span> ", c.folderIds.value = g
							.join(), e.innerHTML = "\u4fee\u6539"
			} else
				this.uploadInfo[b].albumData = [], d.innerHTML = "", c.folderIds.value = "", e.innerHTML = "\u6dfb\u52a0\u5230\u4e13\u8f91"
		},
		qtipsHandler : function(a) {
			a = a || window.event;
			a = (a.target || a.srcElement).parentNode;
			a.parentNode.removeChild(a);
			a = new Date;
			a.setTime(a.getTime() + 2592E6);
			a = "; expires=" + a.toGMTString();
			document.cookie = "_up_q_t_=1" + a + "; path=/";
			z.FIRSTUPLOAD = !1
		},
		qwindowHandler : function(a, b) {
			var c = b.nodeId, d = b.action, e = document
					.getElementById("upload-qwindow");
			switch (d) {
				case "close" :
					e.style.display = "none";
					break;
				case "submit" :
					e.style.display = "none";
					this.cancelUpload(c);
					break;
				case "cancel" :
					e.style.display = "none"
			}
			this.layer && this.layer.close()
		},
		renderSuccessPanel : function(a) {
			var b = this.uploadInfo[a].progressNode, c = this.uploadInfo[a].successNode, d = this.uploadInfo[a].uploadToken;
			this.getNode("upload-form", b);
			for (var e = this.getNode("form_btnmaj_l", c), f = this.uploadInfo[a].metaData, g = this
					.getNode("meta-cate", b).getElementsByTagName("span")[0].innerHTML, h = this
					.getNode("meta-source", b).getElementsByTagName("span")[0].innerHTML, j = this
					.getNode("meta-public", b).getElementsByTagName("span")[0].innerHTML, s = this
					.getNode("meta-album-list", b).innerHTML, n = document
					.getElementById("upload-qwindow"), p = f.tags.split(","), l = "", o = 0; o < p.length; o++)
				l += "<span>" + p[o] + "</span>";
			if (n)
				n.style.display = "none";
			this.layer && this.layer.close();
			this.getNode("meta-title", c).innerHTML = f.title;
			this.getNode("meta-memo", c).innerHTML = f.memo.replace(
					/\r\n|\r|\n/g, "<br/>");
			this.getNode("meta-tags", c).innerHTML = l;
			this.getNode("meta-catIds", c).innerHTML = g;
			this.getNode("meta-sourceType", c).innerHTML = h;
			this.getNode("meta-publicType", c).innerHTML = j;
			this.getNode("meta-folderIds", c).innerHTML = s;
			b.style.display = "none";
			c.style.display = "block";
			L && localStorage.getItem(d) && localStorage.removeItem(d);
			U(document, "click", this.d_handler);
			delete this.uploadInfo[a];
			k(e, "click", i(function() {
				this.containerPanel.innerHTML = "";
				B
						? this.startPanel.style.display = "block"
						: (this.startPanel.style.height = "auto", this.startPanel.style.width = "970px");
				this.showTips();
				x(4007066)
			}, this))
		},
		showTips : function() {
			var a = document.getElementById("ab_852");
			if (!a || !a.innerHTML)
				a = ca[Math.floor(Math.random() * ca.length)], document
						.getElementById("tips-box").innerHTML = o(
						'<p></p><ul><li class="uploadF_12"><em>&nbsp;</em>{tip}</li></ul>',
						{
							tip : a
						})
		},
		showMetaErrors : function(a, b) {
			for (var c = this.uploadInfo[b.nodeId].progressNode, d = w(c,
					"error"), e = this.getNode("upload-form", c), f = 0; f < d.length; f++)
				d[f].style.display = "none";
			if (!a || 0 == a.length)
				return !1;
			for (f = 0; f < a.length; f++)
				if (d = this.getNode("error-" + a[f].field, c)) {
					d.innerHTML = qa[a[f].code] || a[f].message;
					var g = a[f].field;
					switch (g) {
						case "videoPassword" :
							d.style.display = "inline";
							n(e[g], "form_input_error");
							break;
						case "catIds" :
							d.style.display = "block";
							break;
						case "memo" :
							if (142 == a[f].code)
								g = v(e.memo.value), d.innerHTML = o(
										"\u7b80\u4ecb\u6700\u591a2000\u4e2a\u5b57\u7b26\uff0c\u5f53\u524d\u5df2\u8f93\u5165{num}\u4e2a\u5b57\u7b26",
										{
											num : g
										});
							n(e.memo, "form_input_error");
							d.style.display = "block";
							break;
						case "title" :
							if (102 == a[f].code)
								g = v(e.title.value), d.innerHTML = o(
										"\u6807\u9898\u6700\u591a60\u4e2a\u5b57\u7b26\uff0c\u5f53\u524d\u5df2\u8f93\u5165{num}\u4e2a\u5b57\u7b26",
										{
											num : g
										});
							n(e.title, "form_input_error");
							d.style.display = "block";
							break;
						case "publicType" :
							break;
						case "tags" :
							d.style.display = "block";
							n(this.getNode("meta-tags-box", c),
									"form_input_error");
							break;
						default :
							d.style.display = "block", n(e[g],
									"form_input_error")
					}
				}
			return !0
		},
		tagsBoxHandler : function(a, b) {
			var c = b.nodeId, d = b.type, e = this.uploadInfo[c].progressNode;
			if (this.uploadInfo[c].disabled)
				return !1;
			this.removeSuccessMessage(c);
			switch (d) {
				case "click" :
					this.getNode("meta-tags", e).focus()
			}
		},
		tagsHandler : function(a, b) {
			var c = a || window.event, d = c.target || c.srcElement, e = b.nodeId, f = b.type, g = this.uploadInfo[e].progressNode, h = this
					.getNode("upload-form", g), j = [",", " ", "\uff0c",
					"\u3000"], i = [];
			if (this.uploadInfo[e].disabled)
				return !1;
			this.removeSuccessMessage(e);
			switch (f) {
				case "keydown" :
					if (8 === (c.keyCode || c.which || 0) && !d.value)
						if (e = w(g, "upSelect"), 0 < e.length) {
							var e = e[e.length - 1], k = e
									.getAttribute("data-tag-class"), f = e
									.getAttribute("data-tag-name"), g = this
									.getNode(k, g);
							e.parentNode.removeChild(e);
							if (g)
								g.parentNode.style.display = "";
							h.tags.value = this.getTagNames(h);
							d.value = f;
							this.preventDefault(c)
						}
					break;
				case "focus" :
					this.showQtips("tags", g);
					this.getNode("upLabel", g).style.display = "block";
					p(this.getNode("meta-tags-box", g), "form_input_error");
					this.getNode("error-tags", g).style.display = "none";
					break;
				default :
					if (c.propertyName
							&& "value" != c.propertyName.toLowerCase())
						return !1;
					if ("" != t(d.value)) {
						for (var h = d.value, l = "", k = 0, i = []; h.length;) {
							for (var o = -1, l = 0; l < j.length; l++) {
								var r = h.indexOf(j[l]);
								-1 !== r
										&& (-1 === o && (o = r), o = Math.min(
												o, r))
							}
							if (-1 === o)
								break;
							else if (0 === o) {
								h = h.slice(1);
								continue
							}
							l = h.slice(0, o);
							k = v(t(l));
							if (2 <= k && 12 >= k)
								i.push(l), h = h.slice(o + 1);
							else
								break
						}
						for (l = 0; l < i.length; l++)
							this.renderTag({
										title : "",
										name : t(i[l])
									}, e);
						if (h)
							if (j = this.getNode("error-tags", g), i = v(t(h)), 0 != k
									&& 2 > k || "blur" == f && 2 > i) {
								if (j.innerHTML = "\u5355\u4e2a\u6807\u7b7e\u6700\u5c112\u4e2a\u5b57\u7b26\uff0c\u4e00\u4e2a\u6c49\u5b57\u7b97\u4f5c\u4e24\u4e2a\u5b57\u7b26", j.style.display = "block", n(
										this.getNode("meta-tags-box", g),
										"form_input_error"), d.value != h)
									d.value = h, this.preventDefault(c)
							} else if (0 != k && 12 < k || 12 < i) {
								if (j.innerHTML = "\u5355\u4e2a\u6807\u7b7e\u6700\u591a12\u4e2a\u5b57\u7b26\uff0c\u4e00\u4e2a\u6c49\u5b57\u7b97\u4f5c\u4e24\u4e2a\u5b57\u7b26", j.style.display = "block", n(
										this.getNode("meta-tags-box", g),
										"form_input_error"), d.value != h)
									d.value = h, this.preventDefault(c)
							} else if (p(this.getNode("meta-tags-box", g),
									"form_input_error"), j.style.display = "none", "blur" == f)
								this.renderTag({
											title : "",
											name : t(h)
										}, e), d.value = "", this
										.preventDefault(c);
							else {
								if (d.value != h)
									d.value = h, this.preventDefault(c)
							}
						else
							d.value = "", this.preventDefault(c)
					} else if (c = h.tags.value.split(","), j = this.getNode(
							"error-tags", g), 0 < c.length)
						p(this.getNode("meta-tags-box", g), "form_input_error"), j.style.display = "none"
			}
		},
		showQtips : function(a, b) {
			if (z.FIRSTUPLOAD && b) {
				this.getNode("qtips-" + a, b);
				for (var c = w(b, "qtips"), d = 0; d < c.length; d++)
					c[d].style.display = D(c[d], "qtips-" + a)
							? "block"
							: "none"
			}
		},
		addTag : function(a, b) {
			var c = a || window.event, d = c.target || c.srcElement, e = b.nodeId, f = this
					.getNode("upload-form", this.uploadInfo[e].progressNode).tags.value
					.split(",");
			this.preventDefault(c);
			this.stopPropagation(c);
			if (this.uploadInfo[e].disabled || this.uploadInfo[e].tagDisabled)
				return !1;
			if (10 > f.length)
				d.parentNode.style.display = "none";
			this.renderTag({
						title : d.className,
						name : d.innerHTML
					}, e, "add")
		},
		removeTag : function(a, b) {
			var c = a || window.event, c = (c.target || c.srcElement).parentNode, d = this.uploadInfo[b].progressNode, e = this
					.getNode("upload-form", d);
			c.getElementsByTagName("span");
			var f = c.getAttribute("data-tag-class");
			if (this.uploadInfo[b].disabled || this.uploadInfo[b].tagDisabled)
				return !1;
			c.parentNode.removeChild(c);
			if (f)
				this.getNode(f, d).parentNode.style.display = "";
			e.tags.value = this.getTagNames(e);
			if (!e.tags.value)
				p(this.getNode("meta-tags-box", d), "form_input_error"), this
						.getNode("error-tags", d).style.display = "none"
		},
		renderTag : function(a, b) {
			var c = this.uploadInfo[b].progressNode, d = this.getNode(
					"meta-tags", c), e = this.getNode("upload-form", c), f = e.tags.value
					.split(","), g = this.getNode("error-tags", c);
			if (this.uploadInfo[b].disabled)
				return !1;
			this.removeSuccessMessage(b);
			10 <= f.length
					? (g.innerHTML = "\u6807\u7b7e\u6700\u591a\u4e3a10\u4e2a", g.style.display = "block")
					: (f = C(o(
							"<div class='upSelect' data-tag-name='{name}' data-tag-class='{title}'><span>{name}</span><p title='\u79fb\u9664\u8be5\u6807\u7b7e' class='handler' style='clear:right' ></p></div>",
							a)), d.parentNode.insertBefore(f, d), k(this
									.getNode("handler", f), "click", i(
									this.removeTag, this, b)), e.tags.value = this
							.getTagNames(e), p(
							this.getNode("meta-tags-box", c),
							"form_input_error"), g.style.display = "none")
		},
		selectorBtnHandler : function(a, b) {
			var c = a || window.event, d = b.nodeId, e = b.type, f = this.uploadInfo[d].progressNode;
			this.getNode("meta-password", f);
			this.getNode("upload-form", f);
			var g;
			this.preventDefault(c);
			this.stopPropagation(c);
			if (this.uploadInfo[d].disabled)
				return !1;
			this.removeSuccessMessage(d);
			switch (e) {
				case "publicType" :
					g = this.getNode("meta-public-list", f);
					this.getNode("meta-cate-list", f).style.display = "none";
					this.getNode("meta-source-list", f).style.display = "none";
					break;
				case "sourceType" :
					g = this.getNode("meta-source-list", f), this.getNode(
							"meta-cate-list", f).style.display = "none", this
							.getNode("meta-public-list", f).style.display = "none"
			}
			g.style.display = "block" == g.style.display ? "none" : "block"
		},
		selectorHandler : function(a, b) {
			var c = a || window.event, c = c.target || c.srcElement, d = b.nodeId, e = b.type, f = this.uploadInfo[d].progressNode, g = this
					.getNode("upload-form", f), h = this.getNode(
					"meta-password", f), j = c.getAttribute("data-value");
			if (this.uploadInfo[d].disabled)
				return !1;
			this.removeSuccessMessage(d);
			switch (e) {
				case "publicType" :
					d = this.getNode("meta-public", f);
					d = d.getElementsByTagName("span")[0];
					g.publicType.value = j;
					d.innerHTML = c.innerHTML;
					this.getNode("meta-public-list", f).style.display = "none";
					c = this.getNode("error-videoPassword", f);
					if (4 == j) {
						if (h.style.display = "block", D(h, "form_input_error"))
							c.style.display = "block"
					} else
						h.style.display = "none", c.style.display = "none";
					break;
				case "sourceType" :
					d = this.getNode("meta-source", f);
					d = d.getElementsByTagName("span")[0];
					g.sourceType.value = j;
					d.innerHTML = c.innerHTML;
					this.getNode("meta-source-list", f).style.display = "none";
					break;
				case "mouseover" :
					h = c.parentNode.getElementsByTagName("dd");
					for (j = 0; j < h.length; j++)
						p(h[j], "ddHover");
					n(c, "ddHover")
			}
		},
		cateListHandler : function(a, b) {
			var c = b.nodeId, d = b.type, e = this.getNode("meta-cate-list",
					this.uploadInfo[c].progressNode);
			if (this.uploadInfo[c].disabled)
				return !1;
			this.removeSuccessMessage(c);
			switch (d) {
				case "blur" :
					e.style.display = "none"
			}
		},
		cateSelectHandler : function(a, b) {
			var c = a || window.event, d = c.target || c.srcElement, e = b.nodeId, f = b.type, g = this.uploadInfo[e].progressNode, h = this
					.getNode("upload-form", g), j = this.getNode(
					"meta-cate-list", g), i = this.getNode("meta-cate", g)
					.getElementsByTagName("span")[0], k = d
					.getAttribute("data-value"), l = this;
			this.preventDefault(c);
			this.stopPropagation(c);
			if (this.uploadInfo[e].disabled)
				return !1;
			this.removeSuccessMessage(e);
			switch (f) {
				case "click" :
					i.innerHTML = d.innerHTML, h.catIds.value = k, j.style.display = "none", this
							.getNode("error-catIds", g).style.display = "none", this
							.request("/QUpload/~ajax/getSubCates/", {
										method : "get",
										parameters : {
											cateId : k
										},
										onComplete : function(a) {
											a = eval("(" + a.responseText + ")");
											l.renderRecTags(a, e)
										},
										onFailure : function() {
										}
									})
			}
		},
		renderRecTags : function(a, b) {
			var c = this.getNode("meta-tags-rec",
					this.uploadInfo[b].progressNode), d = "", e = 0, f = 0;
			if (this.uploadInfo[b].disabled)
				return !1;
			if (0 < a.length) {
				for (d += '<p >\u63a8\u8350\u6807\u7b7e:</p><div class="uplabel_select">'; e < a.length; e++)
					d += "<span class='upLabel_list'><a href='#' class='rec-tag-"
							+ e + "'>" + a[e] + "</a></span>";
				c.innerHTML = d + '</div><div class="clear"></div>';
				for (c = c.getElementsByTagName("a"); f < c.length; f++)
					k(c[f], "click", i(this.addTag, this, {
										type : "recTag",
										nodeId : b
									}))
			} else
				c.innerHTML = d
		},
		cateBtnHandler : function(a, b) {
			var c = a || window.event, d = b.nodeId, e = b.type, f = this.uploadInfo[d].progressNode, g = this
					.getNode("meta-cate-list", f), h = g
					.getElementsByTagName("a"), j = this.getNode("upload-form",
					f).catIds.value;
			this.preventDefault(c);
			this.stopPropagation(c);
			if (this.uploadInfo[d].disabled)
				return !1;
			this.removeSuccessMessage(d);
			switch (e) {
				case "click" :
					if (this.getNode("meta-public-list", f).style.display = "none", this
							.getNode("meta-source-list", f).style.display = "none", "block" == g.style.display)
						g.style.display = "none";
					else {
						if (j)
							for (c = 0; c < h.length; c++)
								d = h[c].getAttribute("data-value"), h[c].className = d == j
										? "selected"
										: "";
						g.style.display = "block"
					}
			}
		},
		passwordHandler : function(a, b) {
			var c = b.nodeId, d = b.type, e = this.uploadInfo[c].progressNode, f = this
					.getNode("upload-form", e), e = this.getNode(
					"error-videoPassword", e), g = t(f.videoPassword.value);
			if (this.uploadInfo[c].disabled)
				return !1;
			this.removeSuccessMessage(c);
			"focus" == d
					? (p(f.videoPassword, "form_input_error"), e.style.display = "none")
					: (c = v(g), g && 32 < c
							? (e.innerHTML = o(
									"\u5bc6\u7801\u6700\u591a32\u4f4d\uff0c\u5f53\u524d\u5df2\u8f93\u5165{num}\u4e2a\u5b57\u7b26",
									{
										num : c
									}), n(f.videoPassword, "form_input_error"), e.style.display = "inline")
							: g && !/^[a-zA-Z0-9]{1,32}$/.test(g)
									? (e.innerHTML = "\u5bc6\u7801\u53ea\u80fd\u4f7f\u7528\u6570\u5b57\u3001\u5b57\u6bcd", n(
											f.videoPassword, "form_input_error"), e.style.display = "inline")
									: "blur" == d && !g
											? (e.innerHTML = o("\u8bf7\u586b\u5199\u5bc6\u7801"), n(
													f.videoPassword,
													"form_input_error"), e.style.display = "inline")
											: (p(f.videoPassword,
													"form_input_error"), e.style.display = "none"))
		},
		memoHandler : function(a, b) {
			var c = a || window.event, d = b.nodeId, e = b.type, f = this.uploadInfo[d].progressNode, g = this
					.getNode("upload-form", f), h = this.getNode("memo-hidden",
					f);
			if (this.uploadInfo[d].disabled)
				return !1;
			this.removeSuccessMessage(d);
			switch (e) {
				case "keyup" :
					if (c.propertyName
							&& "value" != c.propertyName.toLowerCase())
						return !1;
					if (6 != r.ie)
						h.value = g.memo.value, h.scrollTop = 0, h.scrollTop = 9E4, c = h.scrollTop, g.memo.style.height = Math
								.min(Math.max(c, 60), 200)
								+ "px", g.memo.style.overflow = 200 < c
								? "auto"
								: "hidden";
					break;
				case "focus" :
					this.showQtips("memo", f)
			}
			c = v(g.memo.value);
			d = o(
					"\u7b80\u4ecb\u6700\u591a2000\u4e2a\u5b57\u7b26\uff0c\u5f53\u524d\u5df2\u8f93\u5165{num}\u4e2a\u5b57\u7b26",
					{
						num : c
					});
			f = this.getNode("error-memo", f);
			2E3 < c
					? (n(g.memo, "form_input_error"), f.innerHTML = d, f.style.display = "block")
					: (p(g.memo, "form_input_error"), f.innerHTML = "", f.style.display = "none")
		},
		titleHandler : function(a, b) {
			var c = b.nodeId, d = b.type, e = this.uploadInfo[c].progressNode, f = this
					.getNode("upload-form", e), g = this.getNode("upTitle", e);
			if (this.uploadInfo[c].disabled)
				return !1;
			this.removeSuccessMessage(c);
			var c = t(f.title.value), h = v(c), j = o(
					"\u6807\u9898\u6700\u591a60\u4e2a\u5b57\u7b26\uff0c\u5f53\u524d\u5df2\u8f93\u5165{num}\u4e2a\u5b57\u7b26",
					{
						num : h
					}), i = this.getNode("error-title", e);
			switch (d) {
				case "keyup" :
					g.innerHTML = R(c, 60);
					60 < h
							? (i.innerHTML = j, i.style.display = "block", n(
									f.title, "form_input_error"))
							: (i.style.innerHTML = "", i.style.display = "none", p(
									f.title, "form_input_error"));
					break;
				case "blur" :
					h
							? 60 < h
									? (i.innerHTML = j, i.style.display = "block", n(
											f.title, "form_input_error"))
									: (i.style.innerHTML = "", i.style.display = "none", p(
											f.title, "form_input_error"))
							: (i.innerHTML = "\u8bf7\u586b\u5199\u6807\u9898\uff0c\u6700\u591a60\u4e2a\u5b57\u7b26", i.style.display = "block", n(
									f.title, "form_input_error"));
					break;
				case "focus" :
					this.showQtips("title", e), i.style.innerHTML = "", i.style.display = "none", p(
							f.title, "form_input_error")
			}
		},
		removeSuccessMessage : function(a) {
			if (this.uploadInfo[a])
				this.getNode("meta-save-message",
						this.uploadInfo[a].progressNode).style.display = "none"
		},
		lastVideoHander : function(a, b) {
			var c = a || window.event, d = c.target || c.srcElement, e = b.nodeId, f = this;
			this.preventDefault(c);
			this.stopPropagation(c);
			if (this.uploadInfo[e].disabled)
				return !1;
			this.removeSuccessMessage(e);
			this.request(d.href, {
						method : "get",
						parameters : {},
						onComplete : function(a) {
							a = eval("(" + a.responseText + ")");
							f.setVideoInfo(a, e)
						},
						onFailure : function() {
						}
					});
			x(4007045)
		},
		unloadHandler : function(a) {
			var a = a || window.event, b = !0, c;
			for (c in this.uploadInfo) {
				b = !1;
				break
			}
			if (!b)
				return a.returnValue = "\u60a8\u6b63\u5728\u4e0a\u4f20\u89c6\u9891\uff0c\u5173\u95ed\u6b64\u9875\u9762\u5c06\u4f1a\u4e2d\u65ad\u4e0a\u4f20\uff0c\u5efa\u8bae\u60a8\u7b49\u5f85\u4e0a\u4f20\u5b8c\u6210\u540e\u518d\u5173\u95ed\u6b64\u9875\u9762"
		},
		documentHandler : function(a, b) {
			var c = this.uploadInfo[b.nodeId].progressNode, d = this.getNode(
					"meta-cate-list", c), e = this.getNode("meta-source-list",
					c), f = this.getNode("meta-public-list", c), c = this
					.getNode("error-tags", c);
			if (d && "block" == d.style.display)
				d.style.display = "none";
			if (c && "\u6807\u7b7e\u6700\u591a\u4e3a10\u4e2a" == t(c.innerHTML))
				c.style.display = "none";
			if (e && "block" == e.style.display)
				e.style.display = "none";
			if (f && "block" == f.style.display)
				f.style.display = "none"
		},
		setVideoInfo : function(a, b) {
			for (var c = this.uploadInfo[b].progressNode, d = this.getNode(
					"upload-form", c), e = this.getNode("meta-cate-list", c), f = this
					.getNode("meta-source-list", c), g = this.getNode(
					"meta-public-list", c), e = e.getElementsByTagName("a"), f = f
					.getElementsByTagName("dd"), g = g
					.getElementsByTagName("dd"), h = this.getNode("meta-cate",
					c), i = this.getNode("meta-source", c), k = this.getNode(
					"meta-public", c), l = this.getNode("meta-tags-box", c), l = w(
					l, "upSelect"), n = w(d, "error"), o = w(d,
					"form_input_error"), r = t(a.tags).split(" "), u = this, m = 0; m < n.length; m++)
				n[m].style.display = "none";
			for (m = 0; m < o.length; m++)
				p(o[m], "form_input_error");
			this.getNode("upTitle", c).innerHTML = a.title;
			this.getNode("meta-password", c).style.display = "none";
			d.title.value = a.title;
			d.catIds.value = a.cates;
			d.tags.value = "";
			d.sourceType.value = a.sourceType;
			d.publicType.value = a.publicType;
			d.videoPassword.value = "";
			if (200 < v(a.memo))
				d.memo.style.overflow = "auto";
			d.memo.value = a.memo;
			for (m = 0; m < e.length; m++)
				if (e[m].getAttribute("data-value") == a.cates)
					h.getElementsByTagName("span")[0].innerHTML = e[m].innerHTML;
			for (m = 0; m < f.length; m++)
				if (f[m].getAttribute("data-value") == a.sourceType)
					i.getElementsByTagName("span")[0].innerHTML = f[m].innerHTML;
			for (m = 0; m < l.length; m++)
				l[m].parentNode.removeChild(l[m]);
			for (m = 0; m < g.length; m++)
				if (g[m].getAttribute("data-value") == a.publicType
						&& (k.getElementsByTagName("span")[0].innerHTML = g[m].innerHTML, 4 == a.publicType))
					this.getNode("meta-password", c).style.display = "block";
			for (m = 0; m < r.length; m++)
				this.renderTag({
							title : "",
							name : t(r[m])
						}, b, "add");
			a.foldersInfo && 0 < a.foldersInfo.length
					&& this.setAlbumData(a.foldersInfo, b);
			d.catIds.value && this.request("/QUpload/~ajax/getSubCates/", {
						method : "get",
						parameters : {
							cateId : d.catIds.value
						},
						onComplete : function(a) {
							a = eval("(" + a.responseText + ")");
							u.renderRecTags(a, b)
						},
						onFailure : function() {
						}
					})
		},
		createUploadTask : function(a) {
			var b = this.uploadInfo[a].file, c = this;
			this.request("/tk", {
				method : "get",
				parameters : {
					fileSize : b.get("size"),
					fileName : b.get("name"),
					fileType : b.get("type"),
					fileDateModified : b.get("dateModified") + "",
					client : F
				},
				onComplete : function(d) {
					var e = eval("(" + d.responseText + ")").token, d = "";
					if (e)
						if (c.uploadInfo[a].uploadToken = e, M)
							if (d = localStorage.getItem(e))
								c.uploadInfo[a].serverAddress = d, c
										.uploadFile(b, d, e, "resumeUpload");
							else {
								var f = new XMLHttpRequest, d = K({
											token: e
										},
										"/upload");
								f.open("get", d, !0);
								f.onerror = function() {
									c.uploadFile(b, "upload.youku.com", e,
											"formUpload")
								};
								f.onload = function() {
									try {
										var d = eval("(" + f.responseText + ")").token;
										d
												? (localStorage.setItem(e, d), c.uploadInfo[a].serverAddress = d, c
														.uploadFile(b, "localhost:8080", e,
																"streamUpload"))
												: c.uploadFile(b,
														"localhost:8080", e,
														"streamUpload")
									} catch (h) {
										c.uploadFile(b, "localhost:8080", e,
												"formUpload")
									}
								};
								f.send()
							}
						else
							c
									.uploadFile(b, "upload.youku.com", e,
											"formUpload");
					else
						d = c.getNode("upload-start-error", this.startPanel), c
								.cancelUpload(a), d.innerHTML = "\u521b\u5efa\u4e0a\u4f20\u4efb\u52a1\u5931\u8d25\uff0c\u8bf7\u5c1d\u8bd5\u91cd\u65b0\u4e0a\u4f20", d.style.display = "block"
				},
				onFailure : function() {
					var b = c.getNode("upload-start-error", this.startPanel);
					c.cancelUpload(a);
					b.innerHTML = "\u521b\u5efa\u4e0a\u4f20\u4efb\u52a1\u5931\u8d25\uff0c\u8bf7\u5c1d\u8bd5\u91cd\u65b0\u4e0a\u4f20";
					b.style.display = "block"
				}
			})
		},
		uploadFile : function(a, b, c, d) {
			var e = "", c = {
				token : c,
				client : F
			}, e = b ? "http://" + b + "/" : "http://upload.youku.com/api/", e = "formUpload" == d
					? e + "upload_form_data/"
					: e + "upload";
			d && a instanceof u && a.set("uploadMethod", d);
			this.fileUploader.upload(a, e, c)
		},
		request : function(a, b) {
			var c = {
				method : "get",
				parameters : {},
				onComplete : function() {
				},
				onFailure : function() {
				}
			}, d;
			for (d in c)
				b && b[d] && (c[d] = b[d]);
			new Ajax.Request(a, c)
		},
		uploadProgress : function(a) {
			var b = a.target.get("id"), b = this.uploadInfo[this.get("prefix")
					+ b].progressNode, c = this.formatSpeed(a.bytesSpeed), d = this
					.formatBytes(a.bytesLoaded), e = this
					.formatBytes(a.bytesTotal), f = this
					.formatTime(a.remainTime), a = Math.min(99.99,
					a.percentLoaded);
			100 > a && (a = parseFloat(a).toFixed(2));
			d = Math.min(d, e);
			d = parseFloat(d).toFixed(2);
			e = parseFloat(e).toFixed(2);
			this.getNode("bar", b).style.width = a + "%";
			this.getNode("f_36", b).innerHTML = a + "%";
			this.getNode("speed", b).innerHTML = "\u4e0a\u4f20\u901f\u5ea6\uff1a"
					+ c;
			if (f)
				this.getNode("time", b).innerHTML = "\u5269\u4f59\u65f6\u95f4\uff1a"
						+ f;
			this.getNode("uploaded", b).innerHTML = "\u5df2\u4e0a\u4f20\uff1a"
					+ d + "MB/" + e + "MB"
		},
		uploadComplete : function(a) {
			var b = a.target.get("id"), b = this.get("prefix") + b, c = this.uploadInfo[b].progressNode, d = a.target
					.get("size"), a = eval("(" + a.data + ")"), d = this
					.formatBytes(d);
			this.getNode("bar", c).style.width = "100%";
			this.getNode("f_36", c).innerHTML = "100%";
			this.getNode("uploaded", c).innerHTML = "\u5df2\u4e0a\u4f20\uff1a"
					+ d + "MB/" + d + "MB";
			this.getNode("time", c).innerHTML = "\u5269\u4f59\u65f6\u95f4\uff1a0";
			if (a.upload_server_name)
				this.uploadInfo[b].serverName = a.upload_server_name, this.uploadInfo[b].fileUploaded = !0, this
						.completeUpload(b)
		},
		uploadError : function() {
			B || x(4007213)
		},
		getNode : function(a, b) {
			return w(b || this.containerPanel, a)[0] || null
		},
		getStyle : function(a, b) {
			return Element.getStyle(a, b)
		},
		getDimensions : function(a) {
			return Element.getDimensions(a)
		},
		fileSelect : function(a) {
			var a = a.fileList, b = 0, c;
			for (c in this.uploadInfo)
				b++;
			if (b == this.get("simLimit") || a.length > this.get("simLimit"))
				return !1;
			for (c = 0; c < a.length; c++)
				this.validateFile(a[c]) && this.startUpload(a[c])
		},
		validateFile : function(a) {
			var b = a.get("name"), c = a.get("size"), d = -1 !== b.indexOf(".")
					? b.replace(/.*[.]/, "").toLowerCase()
					: "", e = N, f = !1, g = "";
			this.getNode("upload-start-error", this.startPanel).style.display = "none";
			if (a instanceof E && 2147483648 < c)
				g = o(
						"\u60a8\u7684\u89c6\u9891\u6587\u4ef6\u5927\u5c0f\u8d85\u8fc7{fileSize}\u4e86\uff0c\u8bf7\u4f7f\u7528\u6700\u5927\u652f\u630110G\u89c6\u9891\u7684\u4f18\u9177\u5ba2\u6237\u7aef\u4e0a\u4f20^_^",
						{
							fileSize : "2G"
						});
			else if (a instanceof u && 2147483648 < c)
				g = o(
						"\u60a8\u7684\u89c6\u9891\u6587\u4ef6\u5927\u5c0f\u8d85\u8fc7{fileSize}\u4e86\uff0c\u8bf7\u4f7f\u7528\u6700\u5927\u652f\u630110G\u89c6\u9891\u7684\u4f18\u9177\u5ba2\u6237\u7aef\u4e0a\u4f20^_^",
						{
							fileSize : "2G"
						});
			else {
				e.length || (f = !0);
				for (a = 0; a < e.length; a++)
					e[a].toLowerCase() == "." + d && (f = !0);
				f
						|| (g = o(
								"\u89c6\u9891\u6587\u4ef6\u683c\u5f0f\u4e0d\u652f\u6301\uff01\u652f\u6301\u7684\u6587\u4ef6\u683c\u5f0f\uff1awmv, avi, dat, asf, rm, rmvb, ram, mpg, mpeg, 3gp, mov, mp4, m4v, dvix, dv, dat, mkv, flv, vob, ram, qt, divx, cpk, fli, flc, mod",
								{
									fileName : b
								}))
			}
			if (!f && g)
				this.getNode("upload-start-error", this.startPanel).innerHTML = g, this
						.getNode("upload-start-error", this.startPanel).style.display = "block";
			return f
		},
		formatSpeed : function(a) {
			var b = 0;
			1024 <= Math.round(a / 1024) ? (b = Math.round(100 * (a / 1048576))
					/ 100, b = Math.max(0, b), b = isNaN(b) ? 0 : parseFloat(b)
					.toFixed(2), a = b + "MB/s") : (b = Math.round(100
					* (a / 1024))
					/ 100, b = Math.max(0, b), b = isNaN(b) ? 0 : parseFloat(b)
					.toFixed(2), a = b + "KB/s");
			return a
		},
		formatBytes : function(a) {
			a = Math.round(100 * (a / 1048576)) / 100;
			return a = isNaN(a) ? 0 : parseFloat(a).toFixed(2)
		},
		formatTime : function(a) {
			var b = a || 0, c = Math.floor(b / 3600), a = Math.floor((b - 3600
					* c)
					/ 60), b = Math.floor(b - 3600 * c - 60 * a), c = ""
					+ (!isNaN(c) && 0 < c ? c + "\u5c0f\u65f6" : ""), c = c
					+ (!isNaN(a) && 0 < a ? a + "\u5206" : "");
			return c += !isNaN(b) && 0 < b ? b + "\u79d2" : ""
		},
		preventDefault : function(a) {
			a.preventDefault ? a.preventDefault() : a.returnValue = !1
		},
		stopPropagation : function(a) {
			a.stopPropagation ? a.stopPropagation() : a.cancelBubble = !0
		}
	};
	ba.prototype = {
		show : function() {
			6 == r.ie
					&& (this._resize(), window.attachEvent("onresize",
							this._resize));
			with (this.Lay.style)
				0 < r.ie
						? filter = "alpha(opacity:" + this.Opacity + ")"
						: opacity = this.Opacity / 100, backgroundColor = this.Color, display = "block"
		},
		close : function() {
			this.Lay.style.display = "none";
			6 == r.ie && window.detachEvent("onresize", this._resize)
		}
	};
	window.Uploader = z
})();
